type: cloud
scope_name: otelcol/awscloudwatchmetricsreceiver

status:
  class: receiver
  stability:
    development:
      - metrics
  distributions: []
  codeowners:
    active:
      - middleware-dev

metrics:
  AWS/AmazonMQ.AckRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AckRate
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.BurstBalance:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BurstBalance
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ChannelCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChannelCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ConfirmRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConfirmRate
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ConnectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConnectionCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ConsumerCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumerCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.CpuCreditBalance:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CpuCreditBalance
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.CpuUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CpuUtilization
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.CurrentConnectionsCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrentConnectionsCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.DequeueCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DequeueCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.DispatchCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DispatchCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.EnqueueCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EnqueueCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.EnqueueTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: EnqueueTime
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: ms
  AWS/AmazonMQ.EstablishedConnectionsCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstablishedConnectionsCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ExchangeCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExchangeCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ExpiredCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExpiredCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.HeapUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: HeapUsage
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.InFlightCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InFlightCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.InactiveDurableTopicSubscribersCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InactiveDurableTopicSubscribersCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.JobSchedulerStorePercentUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: JobSchedulerStorePercentUsage
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.JournalFilesForFastRecovery:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JournalFilesForFastRecovery
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.JournalFilesForFullRecovery:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JournalFilesForFullRecovery
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.MemoryUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MemoryUsage
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.MessageCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MessageCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.MessageReadyCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MessageReadyCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.MessageUnacknowledgedCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MessageUnacknowledgedCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.NetworkIn:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkIn
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: By
  AWS/AmazonMQ.NetworkOut:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkOut
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: By
  AWS/AmazonMQ.OpenTransactionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpenTransactionCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.ProducerCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProducerCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.PublishRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PublishRate
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.QueueCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: QueueCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.QueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: QueueSize
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.RabbitMQDiskFree:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: RabbitMQDiskFree
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: By
  AWS/AmazonMQ.RabbitMQDiskFreeLimit:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: RabbitMQDiskFreeLimit
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: By
  AWS/AmazonMQ.RabbitMQFdUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RabbitMQFdUsed
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.RabbitMQMemLimit:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: RabbitMQMemLimit
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: By
  AWS/AmazonMQ.RabbitMQMemUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: RabbitMQMemUsed
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: By
  AWS/AmazonMQ.ReceiveCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReceiveCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.StorePercentUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: StorePercentUsage
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.SystemCpuUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: SystemCpuUtilization
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.TempPercentUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: TempPercentUsage
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "%"
  AWS/AmazonMQ.TotalConsumerCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TotalConsumerCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.TotalDequeueCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TotalDequeueCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.TotalEnqueueCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TotalEnqueueCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.TotalMessageCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TotalMessageCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.TotalProducerCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TotalProducerCount
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.VolumeReadOps:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeReadOps
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/AmazonMQ.VolumeWriteOps:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeWriteOps
      namespace: AWS/AmazonMQ
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.4XXError:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 4XXError
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.4xx:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 4xx
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.5XXError:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 5XXError
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.5xx:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 5xx
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.CacheHitCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CacheHitCount
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.CacheMissCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CacheMissCount
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.ClientError:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientError
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.ConnectCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConnectCount
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.Count:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Count
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.DataProcessed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataProcessed
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.ExecutionError:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionError
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.IntegrationError:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IntegrationError
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.IntegrationLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IntegrationLatency
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.Latency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Latency
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApiGateway.MessageCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MessageCount
      namespace: AWS/ApiGateway
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.ActiveConnectionCount:
    description: Total number of concurrent TCP connections active from clients to the load balancer and from the load balancer to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveConnectionCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.AnomalousHostCount:
    description: Number of hosts detected with anomalies.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AnomalousHostCount
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.ClientTLSNegotiationErrorCount:
    description: Number of TLS connections initiated by clients that did not establish a session with the load balancer due to TLS errors.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientTLSNegotiationErrorCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ConsumedLCUs:
    description: Number of load balancer capacity units (LCU) used by your load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedLCUs
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.DesyncMitigationMode_NonCompliant_Request_Count:
    description: Number of requests that do not comply with RFC 7230.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DesyncMitigationMode_NonCompliant_Request_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.DroppedInvalidHeaderRequestCount:
    description: Number of requests where invalid HTTP headers were removed before routing.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DroppedInvalidHeaderRequestCount
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.ELBAuthError:
    description: Number of user authentications that could not be completed due to misconfiguration or IdP connection issues.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ELBAuthError
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ELBAuthFailure:
    description: Number of user authentications denied by the IdP or due to authorization issues.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ELBAuthFailure
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ELBAuthLatency:
    description: Time elapsed in milliseconds to query the IdP for ID token and user info.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ELBAuthLatency
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: ms
  AWS/ApplicationELB.ELBAuthRefreshTokenSuccess:
    description: Number of successful refreshes of user claims using a refresh token from the IdP.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ELBAuthRefreshTokenSuccess
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ELBAuthSuccess:
    description: Number of successful authenticate actions after retrieving user claims from the IdP.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ELBAuthSuccess
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ELBAuthUserClaimsSizeExceeded:
    description: Number of times an IdP returned user claims exceeding 11K bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ELBAuthUserClaimsSizeExceeded
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ForwardedInvalidHeaderRequestCount:
    description: Number of requests with invalid HTTP headers that were forwarded by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ForwardedInvalidHeaderRequestCount
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.GrpcRequestCount:
    description: Number of gRPC requests processed over IPv4 and IPv6.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GrpcRequestCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTP_Fixed_Response_Count:
    description: Number of successful fixed-response actions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTP_Fixed_Response_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTP_Redirect_Count:
    description: Number of successful redirect actions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTP_Redirect_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTP_Redirect_Url_Limit_Exceeded_Count:
    description: Number of redirect actions that couldn't complete due to URL size limit exceeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTP_Redirect_Url_Limit_Exceeded_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_3XX_Count:
    description: Number of HTTP 3XX redirection codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_3XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_4XX_Count:
    description: Number of HTTP 4XX client error codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_4XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_5XX_Count:
    description: Number of HTTP 5XX server error codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_5XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_500_Count:
    description: Number of HTTP 500 error codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_500_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_502_Count:
    description: Number of HTTP 502 error codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_502_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_503_Count:
    description: Number of HTTP 503 error codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_503_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_ELB_504_Count:
    description: Number of HTTP 504 error codes originating from the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_504_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_Target_2XX_Count:
    description: Number of HTTP 2XX success response codes generated by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_2XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_Target_3XX_Count:
    description: Number of HTTP 3XX redirection response codes generated by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_3XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_Target_4XX_Count:
    description: Number of HTTP 4XX client error response codes generated by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_4XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HTTPCode_Target_5XX_Count:
    description: Number of HTTP 5XX server error response codes generated by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_5XX_Count
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.HealthyHostCount:
    description: Number of healthy targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HealthyHostCount
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.HealthyStateDNS:
    description: Number of zones that meet the DNS healthy state requirements.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HealthyStateDNS
      namespace: AWS/ApplicationELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ApplicationELB.HealthyStateRouting:
    description: Number of zones that meet the routing healthy state requirements.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HealthyStateRouting
      namespace: AWS/ApplicationELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ApplicationELB.IPv6ProcessedBytes:
    description: Total number of bytes processed by the load balancer over IPv6.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: IPv6ProcessedBytes
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: By
  AWS/ApplicationELB.IPv6RequestCount:
    description: Number of IPv6 requests received by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IPv6RequestCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.LambdaInternalError:
    description: Number of requests to a Lambda function that failed due to internal load balancer or AWS Lambda issues.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaInternalError
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.LambdaTargetProcessedBytes:
    description: Total number of bytes processed by the load balancer for requests and responses from a Lambda function.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: LambdaTargetProcessedBytes
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: By
  AWS/ApplicationELB.LambdaUserError:
    description: Number of requests to a Lambda function that failed due to issues specific to the Lambda function.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaUserError
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.LoadBalancerActiveCount:
    description: Number of active application load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerActiveCount
      namespace: AWS/ApplicationELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ApplicationELB.LoadBalancerCount:
    description: Number of application load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerCount
      namespace: AWS/ApplicationELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ApplicationELB.LoadBalancerFailedCount:
    description: Number of failed application load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerFailedCount
      namespace: AWS/ApplicationELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ApplicationELB.MitigatedHostCount:
    description: Number of requests where invalid HTTP headers were removed before routing.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MitigatedHostCount
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.NewConnectionCount:
    description: Total number of new TCP connections established from clients to the load balancer and from the load balancer to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewConnectionCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.NonStickyRequestCount:
    description: Number of requests where the load balancer chose a new target because it couldn't use an existing sticky session.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NonStickyRequestCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.ProcessedBytes:
    description: Total number of bytes processed by the load balancer over IPv4 and IPv6.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ProcessedBytes
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: By
  AWS/ApplicationELB.RejectedConnectionCount:
    description: Number of connections rejected because the load balancer reached its maximum number of connections.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RejectedConnectionCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.RequestCount:
    description: Number of requests processed over IPv4 and IPv6 where a target was chosen by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.RequestCountPerTarget:
    description: Average request count per healthy target in a target group.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestCountPerTarget
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.RuleEvaluations:
    description: Number of rules processed by the load balancer given a request rate averaged over an hour.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuleEvaluations
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.StandardProcessedBytes:
    description: Total number of bytes processed by the load balancer over IPv4.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: StandardProcessedBytes
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: By
  AWS/ApplicationELB.TargetConnectionErrorCount:
    description: Number of connections not successfully established between the load balancer and target.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TargetConnectionErrorCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.TargetResponseTime:
    description: Time elapsed in seconds from when the request leaves the load balancer until the target starts to send response headers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: TargetResponseTime
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: s
  AWS/ApplicationELB.TargetTLSNegotiationErrorCount:
    description: Number of TLS connections initiated by the load balancer that did not establish a session with the target due to TLS errors.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TargetTLSNegotiationErrorCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.UnHealthyHostCount:
    description: Number of targets that are considered unhealthy.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnHealthyHostCount
      namespace: AWS/ApplicationELB
      statistics: Average
    unit: "{Count}"
  AWS/ApplicationELB.UnhealthyRoutingRequestCount:
    description: Number of requests that are routed using the routing failover action (fail open).
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnhealthyRoutingRequestCount
      namespace: AWS/ApplicationELB
      statistics: Sum
    unit: "{Count}"
  AWS/ApplicationELB.UnhealthyStateDNS:
    description: Number of zones that do not meet the DNS healthy state requirements and therefore were marked unhealthy in DNS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnhealthyStateDNS
      namespace: AWS/ApplicationELB
      statistics: Minimum
    unit: "{Count}"
  AWS/ApplicationELB.UnhealthyStateRouting:
    description: Number of zones that do not meet the routing healthy state requirements.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnhealthyStateRouting
      namespace: AWS/ApplicationELB
      statistics: Minimum
    unit: "{Count}"
  AWS/AutoScaling.GroupAndWarmPoolDesiredCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupAndWarmPoolDesiredCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupAndWarmPoolTotalCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupAndWarmPoolTotalCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupDesiredCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupDesiredCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupInServiceCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupInServiceCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupInServiceInstances:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupInServiceInstances
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupMaxSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupMaxSize
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupMinSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupMinSize
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupPendingCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupPendingCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupPendingInstances:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupPendingInstances
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupStandbyCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupStandbyCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupStandbyInstances:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupStandbyInstances
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupTerminatingCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupTerminatingCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupTerminatingInstances:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupTerminatingInstances
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupTotalCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupTotalCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.GroupTotalInstances:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GroupTotalInstances
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.PredictiveScalingCapacityForecast:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PredictiveScalingCapacityForecast
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.PredictiveScalingLoadForecast:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PredictiveScalingLoadForecast
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.PredictiveScalingMetricPairCorrelation:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PredictiveScalingMetricPairCorrelation
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.WarmPoolDesiredCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmPoolDesiredCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.WarmPoolMinSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmPoolMinSize
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.WarmPoolPendingCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmPoolPendingCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.WarmPoolTerminatingCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmPoolTerminatingCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.WarmPoolTotalCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmPoolTotalCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/AutoScaling.WarmPoolWarmedCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmPoolWarmedCapacity
      namespace: AWS/AutoScaling
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.InputTokenCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InputTokenCount
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.InvocationClientErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationClientErrors
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.InvocationLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationLatency
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.InvocationServerErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationServerErrors
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.InvocationThrottles:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationThrottles
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.Invocations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Invocations
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.OutputImageCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OutputImageCount
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Bedrock.OutputTokenCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OutputTokenCount
      namespace: AWS/Bedrock
      statistics: Average
    unit: "{Count}"
  AWS/Billing.EstimatedCharges:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstimatedCharges
      namespace: AWS/Billing
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.BackupRetentionPeriodStorageUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Gigabytes
      metric: BackupRetentionPeriodStorageUsed
      namespace: AWS/DocDB
      statistics: Average
    unit: GBy
  AWS/DocDB.BufferCacheHitRatio:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: BufferCacheHitRatio
      namespace: AWS/DocDB
      statistics: Average
    unit: "%"
  AWS/DocDB.CPUUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/DocDB
      statistics: Average
    unit: "%"
  AWS/DocDB.ChangeStreamLogSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: ChangeStreamLogSize
      namespace: AWS/DocDB
      statistics: Average
    unit: MBy
  AWS/DocDB.DBClusterReplicaLagMaximum:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DBClusterReplicaLagMaximum
      namespace: AWS/DocDB
      statistics: Average
    unit: ms
  AWS/DocDB.DBClusterReplicaLagMinimum:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DBClusterReplicaLagMinimum
      namespace: AWS/DocDB
      statistics: Average
    unit: ms
  AWS/DocDB.DBInstanceReplicaLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DBInstanceReplicaLag
      namespace: AWS/DocDB
      statistics: Average
    unit: ms
  AWS/DocDB.DatabaseConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnections
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.DiskQueueDepth:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DiskQueueDepth
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.EngineUptime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: EngineUptime
      namespace: AWS/DocDB
      statistics: Average
    unit: s
  AWS/DocDB.FreeLocalStorage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FreeLocalStorage
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.FreeableMemory:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeableMemory
      namespace: AWS/DocDB
      statistics: Average
    unit: By
  AWS/DocDB.NetworkReceiveThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: NetworkReceiveThroughput
      namespace: AWS/DocDB
      statistics: Average
    unit: By/s
  AWS/DocDB.NetworkThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: NetworkThroughput
      namespace: AWS/DocDB
      statistics: Average
    unit: By/s
  AWS/DocDB.NetworkTransmitThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: NetworkTransmitThroughput
      namespace: AWS/DocDB
      statistics: Average
    unit: By/s
  AWS/DocDB.ReadIOPS:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPS
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}/s"
  AWS/DocDB.ReadLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ReadLatency
      namespace: AWS/DocDB
      statistics: Average
    unit: ms
  AWS/DocDB.ReadThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughput
      namespace: AWS/DocDB
      statistics: Average
    unit: By/s
  AWS/DocDB.SnapshotStorageUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Gigabytes
      metric: SnapshotStorageUsed
      namespace: AWS/DocDB
      statistics: Average
    unit: GBy
  AWS/DocDB.SwapUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SwapUsage
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.TotalBackupStorageBilled:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Gigabytes
      metric: TotalBackupStorageBilled
      namespace: AWS/DocDB
      statistics: Average
    unit: GBy
  AWS/DocDB.VolumeBytesUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: VolumeBytesUsed
      namespace: AWS/DocDB
      statistics: Average
    unit: By
  AWS/DocDB.VolumeReadIOPs:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeReadIOPs
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.VolumeWriteIOPs:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeWriteIOPs
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}"
  AWS/DocDB.WriteIOPS:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: WriteIOPS
      namespace: AWS/DocDB
      statistics: Average
    unit: "{Count}/s"
  AWS/DocDB.WriteLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: WriteLatency
      namespace: AWS/DocDB
      statistics: Average
    unit: ms
  AWS/DocDB.WriteThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughput
      namespace: AWS/DocDB
      statistics: Average
    unit: By/s
  AWS/DynamoDB.AccountMaxReads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AccountMaxReads
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.AccountMaxTableLevelReads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AccountMaxTableLevelReads
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.AccountMaxTableLevelWrites:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AccountMaxTableLevelWrites
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.AccountMaxWrites:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AccountMaxWrites
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.AccountProvisionedReadCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AccountProvisionedReadCapacityUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.AccountProvisionedReadCapacityUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: AccountProvisionedReadCapacityUtilization
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "%"
  AWS/DynamoDB.AccountProvisionedWriteCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AccountProvisionedWriteCapacityUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.AccountProvisionedWriteCapacityUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: AccountProvisionedWriteCapacityUtilization
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "%"
  AWS/DynamoDB.AgeOfOldestUnreplicatedRecord:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AgeOfOldestUnreplicatedRecord
      namespace: AWS/DynamoDB
      statistics: Average
    unit: ms
  AWS/DynamoDB.ConditionalCheckFailedRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConditionalCheckFailedRequests
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ConsumedChangeDataCaptureUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedChangeDataCaptureUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ConsumedReadCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedReadCapacityUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ConsumedWriteCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedWriteCapacityUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.FailedToReplicateRecordCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FailedToReplicateRecordCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.MaxProvisionedTableReadCapacityUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MaxProvisionedTableReadCapacityUtilization
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "%"
  AWS/DynamoDB.MaxProvisionedTableWriteCapacityUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MaxProvisionedTableWriteCapacityUtilization
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "%"
  AWS/DynamoDB.OnlineIndexConsumedWriteCapacity:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OnlineIndexConsumedWriteCapacity
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.OnlineIndexPercentageProgress:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OnlineIndexPercentageProgress
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.OnlineIndexThrottleEvents:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OnlineIndexThrottleEvents
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.PendingReplicationCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PendingReplicationCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ProvisionedReadCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedReadCapacityUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ProvisionedWriteCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedWriteCapacityUnits
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ReadThrottleEvents:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReadThrottleEvents
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ReplicationLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ReplicationLatency
      namespace: AWS/DynamoDB
      statistics: Average
    unit: ms
  AWS/DynamoDB.ReturnedBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ReturnedBytes
      namespace: AWS/DynamoDB
      statistics: Average
    unit: By
  AWS/DynamoDB.ReturnedItemCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReturnedItemCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ReturnedRecordsCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReturnedRecordsCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.SuccessfulRequestLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: SuccessfulRequestLatency
      namespace: AWS/DynamoDB
      statistics: Average
    unit: ms
  AWS/DynamoDB.SystemErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SystemErrors
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.TableCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TableCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ThrottledPutRecordCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledPutRecordCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.ThrottledRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledRequests
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.TimeToLiveDeletedItemCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TimeToLiveDeletedItemCount
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.TransactionConflict:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TransactionConflict
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.UserErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UserErrors
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/DynamoDB.WriteThrottleEvents:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WriteThrottleEvents
      namespace: AWS/DynamoDB
      statistics: Average
    unit: "{Count}"
  AWS/EBS.BurstBalance:
    description: The percent of I/O credits remaining in the burst bucket for volumes configured in burst-bucket mode.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: BurstBalance
      namespace: AWS/EBS
      statistics: Average
    unit: "%"
  AWS/EBS.EBSByteBalance%:
    description: The percentage of throughput credits remaining in the burst bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSByteBalance%
      namespace: AWS/EBS
      statistics: Minimum
    unit: "%"
  AWS/EBS.EBSIOBalance%:
    description: The percentage of the I/O operations allowed as per the balance of the EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSIOBalance%
      namespace: AWS/EBS
      statistics: Minimum
    unit: "%"
  AWS/EBS.EBSReadBytes:
    description: The total number of bytes read from the EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: EBSReadBytes
      namespace: AWS/EBS
      statistics: Sum
    unit: By
  AWS/EBS.EBSReadOps:
    description: The total number of read operations from the EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EBSReadOps
      namespace: AWS/EBS
      statistics: Sum
    unit: "{Count}"
  AWS/EBS.EBSWriteBytes:
    description: The total number of bytes written to the EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: EBSWriteBytes
      namespace: AWS/EBS
      statistics: Sum
    unit: By
  AWS/EBS.EBSWriteOps:
    description: The total number of write operations to the EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EBSWriteOps
      namespace: AWS/EBS
      statistics: Sum
    unit: "{Count}"
  AWS/EBS.FastSnapshotRestoreCreditsBalance:
    description: The number of volume create credits available.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: FastSnapshotRestoreCreditsBalance
      namespace: AWS/EBS
      statistics: Average
    unit: "1"
  AWS/EBS.FastSnapshotRestoreCreditsBucketSize:
    description: The maximum number of volume create credits that can be accumulated.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: FastSnapshotRestoreCreditsBucketSize
      namespace: AWS/EBS
      statistics: Average
    unit: "1"
  AWS/EBS.VolumeConsumedReadWriteOps:
    description: The total number of read and write operations consumed by the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeConsumedReadWriteOps
      namespace: AWS/EBS
      statistics: Average
    unit: "{Count}"
  AWS/EBS.VolumeIdleTime:
    description: The total number of seconds during which no read or write operations were submitted to the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: VolumeIdleTime
      namespace: AWS/EBS
      statistics: Average
    unit: s
  AWS/EBS.VolumeQueueLength:
    description: The number of read and write operation requests waiting to be completed in a queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeQueueLength
      namespace: AWS/EBS
      statistics: Average
    unit: "{Count}"
  AWS/EBS.VolumeReadBytes:
    description: The total number of bytes read from the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: VolumeReadBytes
      namespace: AWS/EBS
      statistics: Average
    unit: By
  AWS/EBS.VolumeReadOps:
    description: The total number of read operations performed on the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeReadOps
      namespace: AWS/EBS
      statistics: Average
    unit: "{Count}"
  AWS/EBS.VolumeStalledIOCheck:
    description: The number of stalled I/O check events on the volume, indicating potential performance issues.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: VolumeStalledIOCheck
      namespace: AWS/EBS
      statistics: Sum
    unit: "1"
  AWS/EBS.VolumeThroughputPercentage:
    description: The percentage of total throughput the volume is currently using relative to its baseline throughput.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: VolumeThroughputPercentage
      namespace: AWS/EBS
      statistics: Average
    unit: "%"
  AWS/EBS.VolumeTotalReadTime:
    description: The total time in seconds spent by all read operations on the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: VolumeTotalReadTime
      namespace: AWS/EBS
      statistics: Average
    unit: s
  AWS/EBS.VolumeTotalWriteTime:
    description: The total time in seconds spent by all write operations on the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: VolumeTotalWriteTime
      namespace: AWS/EBS
      statistics: Average
    unit: s
  AWS/EBS.VolumeWriteBytes:
    description: The total number of bytes written to the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: VolumeWriteBytes
      namespace: AWS/EBS
      statistics: Average
    unit: By
  AWS/EBS.VolumeWriteOps:
    description: The total number of write operations performed on the volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeWriteOps
      namespace: AWS/EBS
      statistics: Average
    unit: "{Count}"
  AWS/EBS.VolumesAvailableCount:
    description: The number of EBS volumes that are available.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumesAvailableCount
      namespace: AWS/EBS
      statistics: Maximum
    unit: "{Count}"
  AWS/EBS.VolumesCount:
    description: The number of EBS volumes in the account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumesCount
      namespace: AWS/EBS
      statistics: Maximum
    unit: "{Count}"
  AWS/EBS.VolumesInUseCount:
    description: The number of EBS volumes that are in use.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumesInUseCount
      namespace: AWS/EBS
      statistics: Maximum
    unit: "{Count}"
  AWS/EC2.CPUCreditBalance:
    description: The number of CPU credits available for the instance to spend on burstable performance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditBalance
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.CPUCreditUsage:
    description: The number of CPU credits spent by the instance for CPU utilization.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditUsage
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.CPUSurplusCreditBalance:
    description: The number of surplus credits that have been earned by the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUSurplusCreditBalance
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.CPUSurplusCreditsCharged:
    description: The number of surplus credits that have been charged to the instance when credits are not available.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUSurplusCreditsCharged
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.CPUUtilization:
    description: The percentage of physical CPU time that Amazon EC2 uses to run the EC2 instance, which includes time spent to run both the user code and the Amazon EC2 code.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/EC2
      statistics: Average
    unit: "%"
  AWS/EC2.DedicatedHostCPUUtilization:
    description: The percentage of allocated EC2 Dedicated Host compute units that are currently in use.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: DedicatedHostCPUUtilization
      namespace: AWS/EC2
      statistics: Average
    unit: "%"
  AWS/EC2.DiskReadBytes:
    description: Bytes read from all instance store volumes available to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DiskReadBytes
      namespace: AWS/EC2
      statistics: Average
    unit: By
  AWS/EC2.DiskReadOps:
    description: Completed read operations from all instance store volumes available to the instance in a specified period of time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DiskReadOps
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.DiskWriteBytes:
    description: Bytes written to all instance store volumes available to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DiskWriteBytes
      namespace: AWS/EC2
      statistics: Average
    unit: By
  AWS/EC2.DiskWriteOps:
    description: Completed write operations to all instance store volumes available to the instance in a specified period of time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DiskWriteOps
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.EBSByteBalance%:
    description: The percentage of available throughput for EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSByteBalance%
      namespace: AWS/EC2
      statistics: Maximum
    unit: "%"
  AWS/EC2.EBSIOBalance%:
    description: The percentage of available IOPS for EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSIOBalance%
      namespace: AWS/EC2
      statistics: Maximum
    unit: "%"
  AWS/EC2.EBSReadBytes:
    description: The number of bytes read from EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: EBSReadBytes
      namespace: AWS/EC2
      statistics: Average
    unit: By
  AWS/EC2.EBSReadOps:
    description: The number of read operations from EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EBSReadOps
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.EBSWriteBytes:
    description: The number of bytes written to EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: EBSWriteBytes
      namespace: AWS/EC2
      statistics: Average
    unit: By
  AWS/EC2.EBSWriteOps:
    description: The number of write operations to EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EBSWriteOps
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.InstancesCount:
    description: The total number of instances in the account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InstancesCount
      namespace: AWS/EC2
      statistics: Maximum
    unit: "{Count}"
  AWS/EC2.InstancesRunningCount:
    description: The number of instances that are running in the account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InstancesRunningCount
      namespace: AWS/EC2
      statistics: Maximum
    unit: "{Count}"
  AWS/EC2.InstancesStoppedCount:
    description: The number of instances that are stopped in the account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InstancesStoppedCount
      namespace: AWS/EC2
      statistics: Maximum
    unit: "{Count}"
  AWS/EC2.MemoryUtilization:
    description: The percentage of memory that is currently in use on the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MemoryUtilization
      namespace: AWS/EC2
      statistics: Average
    unit: "%"
  AWS/EC2.MetadataNoToken:
    description: The number of instance metadata requests that were made without a session token.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MetadataNoToken
      namespace: AWS/EC2
      statistics: Sum
    unit: "{Count}"
  AWS/EC2.MetadataNoTokenRejected:
    description: The number of instance metadata requests that were rejected because they did not include a session token.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MetadataNoTokenRejected
      namespace: AWS/EC2
      statistics: Sum
    unit: "{Count}"
  AWS/EC2.NetworkIn:
    description: The number of bytes received by the instance on all network interfaces.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkIn
      namespace: AWS/EC2
      statistics: Average
    unit: By
  AWS/EC2.NetworkOut:
    description: The number of bytes sent out by the instance on all network interfaces.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkOut
      namespace: AWS/EC2
      statistics: Average
    unit: By
  AWS/EC2.NetworkPacketsIn:
    description: The number of packets received by the instance on all network interfaces.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsIn
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.NetworkPacketsOut:
    description: The number of packets sent out by the instance on all network interfaces.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsOut
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.StatusCheckFailed:
    description: The combined result of both the instance status check and the system status check.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StatusCheckFailed
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.StatusCheckFailed_AttachedEBS:
    description: The result of the status check for attached EBS volumes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StatusCheckFailed_AttachedEBS
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.StatusCheckFailed_Instance:
    description: The result of the instance status check, which detects problems that require your attention.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StatusCheckFailed_Instance
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.StatusCheckFailed_System:
    description: The result of the system status check, which detects problems with the physical host.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StatusCheckFailed_System
      namespace: AWS/EC2
      statistics: Average
    unit: "{Count}"
  AWS/EC2.VolumeStalledIOCheck:
    description: The number of stalled I/O operations for EBS volumes attached to the instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: VolumeStalledIOCheck
      namespace: AWS/EC2
      statistics: Average
    unit: "1"
  AWS/ECS.ActiveConnectionCount:
    description: The number of active connections to the load balancer from clients.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveConnectionCount
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.CPUReservation:
    description: The percentage of CPU units that are reserved in the cluster or service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUReservation
      namespace: AWS/ECS
      statistics: Average
    unit: "%"
  AWS/ECS.CPUUtilization:
    description: The percentage of CPU units that is used by the cluster or service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/ECS
      statistics: Average
    unit: "%"
  AWS/ECS.ClientTLSNegotiationErrorCount:
    description: The number of TLS negotiation errors encountered by clients connecting to the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientTLSNegotiationErrorCount
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.EBSFilesystemUtilization:
    description: The percentage of the Amazon EBS filesystem that is used by tasks in a service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSFilesystemUtilization
      namespace: AWS/ECS
      statistics: Average
    unit: "%"
  AWS/ECS.GPUReservation:
    description: The percentage of total available GPUs that are reserved by running tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: GPUReservation
      namespace: AWS/ECS
      statistics: Average
    unit: "%"
  AWS/ECS.GrpcRequestCount:
    description: The number of gRPC requests received by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GrpcRequestCount
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.HTTPCode_Target_2XX_Count:
    description: The number of 2xx HTTP status codes returned by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_2XX_Count
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.HTTPCode_Target_3XX_Count:
    description: The number of 3xx HTTP status codes returned by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_3XX_Count
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.HTTPCode_Target_4XX_Count:
    description: The number of 4xx HTTP status codes returned by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_4XX_Count
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.HTTPCode_Target_5XX_Count:
    description: The number of 5xx HTTP status codes returned by targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Target_5XX_Count
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.MemoryReservation:
    description: The percentage of memory that is reserved by running tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MemoryReservation
      namespace: AWS/ECS
      statistics: Average
    unit: "%"
  AWS/ECS.MemoryUtilization:
    description: The percentage of memory that is used by running tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MemoryUtilization
      namespace: AWS/ECS
      statistics: Average
    unit: "%"
  AWS/ECS.NewConnectionCount:
    description: The number of new connections to the load balancer from clients.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewConnectionCount
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.ProcessedBytes:
    description: The total number of bytes of inbound traffic processed by the Service Connect proxies.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ProcessedBytes
      namespace: AWS/ECS
      statistics: Average
    unit: By
  AWS/ECS.RequestCount:
    description: The number of inbound traffic requests processed by the Service Connect proxies.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestCount
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.RequestCountPerTarget:
    description: The average number of requests received by each target in the target group.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestCountPerTarget
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.ServiceDesiredTaskCount:
    description: The desired number of service tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceDesiredTaskCount
      namespace: AWS/ECS
      statistics: Maximum
    unit: "{Count}"
  AWS/ECS.ServiceTaskPendingCount:
    description: The number of pending service tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceTaskPendingCount
      namespace: AWS/ECS
      statistics: Maximum
    unit: "{Count}"
  AWS/ECS.ServiceTaskRunningCount:
    description: The number of running service tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceTaskRunningCount
      namespace: AWS/ECS
      statistics: Maximum
    unit: "{Count}"
  AWS/ECS.TargetProcessedBytes:
    description: The total number of bytes processed by targets in the target group.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: TargetProcessedBytes
      namespace: AWS/ECS
      statistics: Average
    unit: By
  AWS/ECS.TargetResponseTime:
    description: The average time, in milliseconds, for a target to respond to a request.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: TargetResponseTime
      namespace: AWS/ECS
      statistics: Average
    unit: ms
  AWS/ECS.TargetTLSNegotiationErrorCount:
    description: The number of TLS negotiation errors encountered by targets connecting to the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TargetTLSNegotiationErrorCount
      namespace: AWS/ECS
      statistics: Average
    unit: "{Count}"
  AWS/ECS.TaskCount:
    description: The total number of tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TaskCount
      namespace: AWS/ECS
      statistics: Maximum
    unit: "{Count}"
  AWS/ECS.TaskPendingCount:
    description: The number of pending tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TaskPendingCount
      namespace: AWS/ECS
      statistics: Maximum
    unit: "{Count}"
  AWS/ECS.TaskRunningCount:
    description: The number of running tasks in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TaskRunningCount
      namespace: AWS/ECS
      statistics: Maximum
    unit: "{Count}"
  AWS/EFS.BurstCreditBalance:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BurstCreditBalance
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.ClientConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnections
      namespace: AWS/EFS
      statistics: Average
    unit: "{Count}"
  AWS/EFS.DataReadIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DataReadIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.DataWriteIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DataWriteIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.MetadataIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MetadataIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.MetadataReadIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MetadataReadIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.MetadataWriteIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MetadataWriteIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.MeteredIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MeteredIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.PercentIOLimit:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: PercentIOLimit
      namespace: AWS/EFS
      statistics: Average
    unit: "%"
  AWS/EFS.PermittedThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: PermittedThroughput
      namespace: AWS/EFS
      statistics: Average
    unit: By/s
  AWS/EFS.StorageBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: StorageBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/EFS.TimeSinceLastSync:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: TimeSinceLastSync
      namespace: AWS/EFS
      statistics: Average
    unit: s
  AWS/EFS.TotalIOBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: TotalIOBytes
      namespace: AWS/EFS
      statistics: Average
    unit: By
  AWS/ELB.BackendConnectionErrors:
    description: Number of failed connections between the load balancer and registered instances, including health check failures.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BackendConnectionErrors
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.DesyncMitigationMode_NonCompliant_Request_Count:
    description: Number of requests that do not comply with RFC 7230.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DesyncMitigationMode_NonCompliant_Request_Count
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.EstimatedALBActiveConnectionCount:
    description: Estimated active connections handled by an Application Load Balancer (ALB) over time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstimatedALBActiveConnectionCount
      namespace: AWS/ELB
      statistics: Average
    unit: "{Count}"
  AWS/ELB.EstimatedALBConsumedLCUs:
    description: Estimated load balancer capacity units (LCUs) consumed by an ALB over time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstimatedALBConsumedLCUs
      namespace: AWS/ELB
      statistics: Average
    unit: "{Count}"
  AWS/ELB.EstimatedALBNewConnectionCount:
    description: Estimated new connections handled by an ALB over time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstimatedALBNewConnectionCount
      namespace: AWS/ELB
      statistics: Average
    unit: "{Count}"
  AWS/ELB.EstimatedProcessedBytes:
    description: Estimated total bytes processed by the load balancer over time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstimatedProcessedBytes
      namespace: AWS/ELB
      statistics: Average
    unit: "{Count}"
  AWS/ELB.HTTPCode_Backend_2XX:
    description: Number of HTTP 2XX response codes from registered instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Backend_2XX
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.HTTPCode_Backend_3XX:
    description: Number of HTTP 3XX response codes from registered instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Backend_3XX
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.HTTPCode_Backend_4XX:
    description: Number of HTTP 4XX response codes from registered instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Backend_4XX
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.HTTPCode_Backend_5XX:
    description: Number of HTTP 5XX response codes from registered instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_Backend_5XX
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.HTTPCode_ELB_4XX:
    description: Number of HTTP 4XX client error codes generated by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_4XX
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.HTTPCode_ELB_5XX:
    description: Number of HTTP 5XX server error codes generated by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HTTPCode_ELB_5XX
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.HealthyHostCount:
    description: Number of healthy instances registered with the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HealthyHostCount
      namespace: AWS/ELB
      statistics: Average
    unit: "{Count}"
  AWS/ELB.Latency:
    description: Average time elapsed for the load balancer to send a request to a registered instance and receive a response.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: Latency
      namespace: AWS/ELB
      statistics: Average
    unit: s
  AWS/ELB.LoadBalancerCount:
    description: Number of load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerCount
      namespace: AWS/ELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ELB.RequestCount:
    description: Total number of requests completed or connections made during the specified interval.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestCount
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.SpilloverCount:
    description: Number of requests rejected because the surge queue is full.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SpilloverCount
      namespace: AWS/ELB
      statistics: Sum
    unit: "{Count}"
  AWS/ELB.SurgeQueueLength:
    description: Maximum number of requests or connections pending routing to healthy instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SurgeQueueLength
      namespace: AWS/ELB
      statistics: Maximum
    unit: "{Count}"
  AWS/ELB.UnHealthyHostCount:
    description: Number of unhealthy instances registered with the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnHealthyHostCount
      namespace: AWS/ELB
      statistics: Average
    unit: "{Count}"
  AWS/ES.2xx:
    description: The number of requests to the domain that resulted in the given HTTP response code.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 2xx
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.3xx:
    description: The number of requests to the domain that resulted in the given HTTP response code.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 3xx
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.4xx:
    description: The number of requests to the domain that resulted in the given HTTP response code.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 4xx
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.5xx:
    description: The number of requests to the domain that resulted in the given HTTP response code.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 5xx
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.ADAnomalyDetectorsIndexStatus.red:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADAnomalyDetectorsIndexStatus.red
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.ADAnomalyDetectorsIndexStatusIndexExists:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADAnomalyDetectorsIndexStatusIndexExists
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.ADAnomalyResultsIndexStatus.red:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADAnomalyResultsIndexStatus.red
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.ADAnomalyResultsIndexStatusIndexExists:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADAnomalyResultsIndexStatusIndexExists
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.ADExecuteFailureCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ADExecuteFailureCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ADExecuteRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ADExecuteRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ADHCExecuteFailureCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ADHCExecuteFailureCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ADHCExecuteRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ADHCExecuteRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ADModelsCheckpointIndexStatus.red:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADModelsCheckpointIndexStatus.red
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.ADModelsCheckpointIndexStatusIndexExists:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADModelsCheckpointIndexStatusIndexExists
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.ADPluginUnhealthy:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ADPluginUnhealthy
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingDegraded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingDegraded
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingIndexExists:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingIndexExists
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingIndexStatus.green:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingIndexStatus.green
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingIndexStatus.red:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingIndexStatus.red
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingIndexStatus.yellow:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingIndexStatus.yellow
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingNodesNotOnSchedule:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingNodesNotOnSchedule
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingNodesOnSchedule:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingNodesOnSchedule
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AlertingScheduledJobEnabled:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AlertingScheduledJobEnabled
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AsynchronousSearchCancelled:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchCancelled
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchCompletionRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchCompletionRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchFailureRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchFailureRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchInitializedRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchInitializedRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchMaxRunningTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AsynchronousSearchMaxRunningTime
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.AsynchronousSearchPersistFailedRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchPersistFailedRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchPersistRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchPersistRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchRunningCurrent:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchRunningCurrent
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchStoreHealth:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchStoreHealth
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchStoreSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchStoreSize
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchStoredResponseCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchStoredResponseCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AsynchronousSearchSubmissionRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsynchronousSearchSubmissionRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AutoFollowLeaderCallFailure:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AutoFollowLeaderCallFailure
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AutoFollowNumFailedStartReplication:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AutoFollowNumFailedStartReplication
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AutoFollowNumSuccessStartReplication:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AutoFollowNumSuccessStartReplication
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AutoTuneChangesHistoryHeapSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: AutoTuneChangesHistoryHeapSize
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.AutoTuneChangesHistoryJVMYoungGenArgs:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AutoTuneChangesHistoryJVMYoungGenArgs
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.AutoTuneFailed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AutoTuneFailed
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AutoTuneSucceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: AutoTuneSucceeded
      namespace: AWS/ES
      statistics: Average
    unit: "1"
  AWS/ES.AutoTuneValue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: AutoTuneValue
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.AutomatedSnapshotFailure:
    description: The number of failed automated snapshots for the cluster. A value of 1 indicates that no automated snapshot was taken for the domain in the previous 36 hours.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AutomatedSnapshotFailure
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.AvgPointInTimeAliveTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AvgPointInTimeAliveTime
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.BurstBalance:
    description: The percentage of input and output (I/O) credits remaining in the burst bucket for an EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BurstBalance
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CPUCreditBalance:
    description: The remaining CPU credits available for data nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditBalance
      namespace: AWS/ES
      statistics: Minimum
    unit: "{Count}"
  AWS/ES.CPUUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.ClusterIndexWritesBlocked:
    description: Indicates whether your cluster is accepting or blocking incoming write requests. A value of 0 means that the cluster is accepting requests. A value of 1 means that it is blocking requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ClusterIndexWritesBlocked
      namespace: AWS/ES
      statistics: Maximum
    unit: "1"
  AWS/ES.ClusterStatus.green:
    description: Cluster status.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ClusterStatus.green
      namespace: AWS/ES
      statistics: Maximum
    unit: "1"
  AWS/ES.ClusterStatus.red:
    description: Cluster status.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ClusterStatus.red
      namespace: AWS/ES
      statistics: Maximum
    unit: "1"
  AWS/ES.ClusterStatus.yellow:
    description: Cluster status.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ClusterStatus.yellow
      namespace: AWS/ES
      statistics: Maximum
    unit: "1"
  AWS/ES.ClusterUsedSpace:
    description: The total used space for the cluster. You must leave the period at one minute to get an accurate value.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: ClusterUsedSpace
      namespace: AWS/ES
      statistics: Maximum
    unit: MBy
  AWS/ES.ColdStorageSpaceUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Mebibytes
      metric: ColdStorageSpaceUtilization
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.ColdToWarmMigrationFailureCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ColdToWarmMigrationFailureCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ColdToWarmMigrationLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ColdToWarmMigrationLatency
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ColdToWarmMigrationQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ColdToWarmMigrationQueueSize
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ColdToWarmMigrationSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ColdToWarmMigrationSuccessCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CoordinatingWriteRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CoordinatingWriteRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CrossClusterInboundReplicationRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CrossClusterInboundReplicationRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CrossClusterInboundRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CrossClusterInboundRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CrossClusterOutboundConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CrossClusterOutboundConnections
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CrossClusterOutboundReplicationRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CrossClusterOutboundReplicationRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CrossClusterOutboundRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CrossClusterOutboundRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.CurrentPointInTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrentPointInTime
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DataNodes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataNodes
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DataNodesShards.active:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataNodesShards.active
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DataNodesShards.initializing:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataNodesShards.initializing
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DataNodesShards.relocating:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataNodesShards.relocating
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DataNodesShards.unassigned:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataNodesShards.unassigned
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DeletedDocuments:
    description: "The total number of documents marked for deletion across all data nodes in the cluster. "
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeletedDocuments
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.DiskQueueDepth:
    description: The number of pending input and output (I/O) requests for an EBS volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DiskQueueDepth
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ESReportingFailedRequestSysErrCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ESReportingFailedRequestSysErrCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ESReportingFailedRequestUserErrCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ESReportingFailedRequestUserErrCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ESReportingRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ESReportingRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ESReportingSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ESReportingSuccessCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ElasticsearchRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ElasticsearchRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.FollowerCheckPoint:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FollowerCheckPoint
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.FreeStorageSpace:
    description: The free space for data nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: FreeStorageSpace
      namespace: AWS/ES
      statistics: Sum
    unit: MBy
  AWS/ES.HasActivePointInTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HasActivePointInTime
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HasUsedPointInTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HasUsedPointInTime
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotStorageSpaceUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Mebibytes
      metric: HotStorageSpaceUtilization
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.HotToWarmMigrationFailureCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationFailureCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotToWarmMigrationForceMergeLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationForceMergeLatency
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotToWarmMigrationProcessingLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationProcessingLatency
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotToWarmMigrationQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationQueueSize
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotToWarmMigrationSnapshotLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationSnapshotLatency
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotToWarmMigrationSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationSuccessCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.HotToWarmMigrationSuccessLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HotToWarmMigrationSuccessLatency
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.IndexingLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: IndexingLatency
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.IndexingRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IndexingRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.InvalidHostHeaderRequests:
    description: The number of HTTP requests made to the OpenSearch cluster that included an invalid (or missing) host header.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvalidHostHeaderRequests
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.IopsThrottle:
    description: Indicates whether or not the number of input/output operations per second (IOPS) on the domain have been throttled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IopsThrottle
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.JVMGCOldCollectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JVMGCOldCollectionCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.JVMGCOldCollectionTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: JVMGCOldCollectionTime
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.JVMGCYoungCollectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JVMGCYoungCollectionCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.JVMGCYoungCollectionTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: JVMGCYoungCollectionTime
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.JVMMemoryPressure:
    description: The maximum percentage of the Java heap used for all data nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: JVMMemoryPressure
      namespace: AWS/ES
      statistics: Maximum
    unit: "%"
  AWS/ES.KMSKeyError:
    description: A value of 1 indicates that the AWS KMS key used to encrypt data at rest has been disabled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KMSKeyError
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.KMSKeyInaccessible:
    description: "A value of 1 indicates that the AWS KMS key used to encrypt data at rest has been deleted or revoked its grants to OpenSearch Service. "
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KMSKeyInaccessible
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.KNNCacheCapacityReached:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNCacheCapacityReached
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNCircuitBreakerTriggered:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNCircuitBreakerTriggered
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNEvictionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNEvictionCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNGraphIndexErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNGraphIndexErrors
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNGraphIndexRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNGraphIndexRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNGraphMemoryUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Kilobytes
      metric: KNNGraphMemoryUsage
      namespace: AWS/ES
      statistics: Average
    unit: kBy
  AWS/ES.KNNGraphQueryErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNGraphQueryErrors
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNGraphQueryRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNGraphQueryRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNHitCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNHitCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNLoadExceptionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNLoadExceptionCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNLoadSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNLoadSuccessCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNMissCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNMissCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNQueryRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNQueryRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNScriptCompilationErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNScriptCompilationErrors
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNScriptCompilations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNScriptCompilations
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNScriptQueryErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNScriptQueryErrors
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNScriptQueryRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KNNScriptQueryRequests
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KNNTotalLoadTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Nanoseconds
      metric: KNNTotalLoadTime
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.KibanaConcurrentConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaConcurrentConnections
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaHealthyNodes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaHealthyNodes
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaHeapTotal:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaHeapTotal
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaHeapUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaHeapUsed
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaHeapUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: KibanaHeapUtilization
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.KibanaOS1MinuteLoad:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaOS1MinuteLoad
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaReportingFailedRequestSysErrCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaReportingFailedRequestSysErrCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaReportingFailedRequestUserErrCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaReportingFailedRequestUserErrCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaReportingRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaReportingRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaReportingSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaReportingSuccessCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaRequestTotal:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaRequestTotal
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.KibanaResponseTimesMaxInMillis:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KibanaResponseTimesMaxInMillis
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.LTRFailedRequestCountByCusErr:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LTRFailedRequestCountByCusErr
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.LTRFailedRequestCountBySysErr:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LTRFailedRequestCountBySysErr
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.LTRRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LTRRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.MasterCPUCreditBalance:
    description: The remaining CPU credits available for dedicated master nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: MasterCPUCreditBalance
      namespace: AWS/ES
      statistics: Minimum
    unit: "1"
  AWS/ES.MasterCPUUtilization:
    description: The maximum percentage of CPU resources used by the dedicated master nodes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MasterCPUUtilization
      namespace: AWS/ES
      statistics: Maximum
    unit: "%"
  AWS/ES.MasterFreeStorageSpace:
    description: This metric is not relevant and can be ignored.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MasterFreeStorageSpace
      namespace: AWS/ES
      statistics: Maximum
    unit: By
  AWS/ES.MasterJVMMemoryPressure:
    description: The maximum percentage of the Java heap used for all dedicated master nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MasterJVMMemoryPressure
      namespace: AWS/ES
      statistics: Maximum
    unit: "%"
  AWS/ES.MasterOldGenJVMMemoryPressure:
    description: The maximum percentage of the Java heap used for the "old generation" per master node.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MasterOldGenJVMMemoryPressure
      namespace: AWS/ES
      statistics: Maximum
    unit: "%"
  AWS/ES.MasterReachableFromNode:
    description: A health check for MasterNotDiscovered exceptions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: MasterReachableFromNode
      namespace: AWS/ES
      statistics: Maximum
    unit: "1"
  AWS/ES.MasterSysMemoryUtilization:
    description: |+
      The percentage of the master node's memory that is in use.

    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MasterSysMemoryUtilization
      namespace: AWS/ES
      statistics: Maximum
    unit: "%"
  AWS/ES.Nodes:
    description: The number of nodes in the OpenSearch Service cluster, including dedicated master nodes and UltraWarm nodes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Nodes
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.OldGenJVMMemoryPressure:
    description: The maximum percentage of the Java heap used for the "old generation" on all data nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: OldGenJVMMemoryPressure
      namespace: AWS/ES
      statistics: Maximum
    unit: "%"
  AWS/ES.OpenSearchDashboardsHealthyNodes:
    description: A health check for OpenSearch Dashboards.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpenSearchDashboardsHealthyNodes
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.OpenSearchRequests:
    description: The number of requests made to the OpenSearch cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpenSearchRequests
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.OpensearchDashboardsReportingFailedRequestSysErrCount:
    description: The number of requests to generate OpenSearch Dashboards reports that failed due to server problems or feature limitations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpensearchDashboardsReportingFailedRequestSysErrCount
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.OpensearchDashboardsReportingFailedRequestUserErrCount:
    description: The number of requests to generate OpenSearch Dashboards reports that failed due to client issues.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpensearchDashboardsReportingFailedRequestUserErrCount
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.OpensearchDashboardsReportingRequestCount:
    description: The total number of requests to generate OpenSearch Dashboards reports.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpensearchDashboardsReportingRequestCount
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.OpensearchDashboardsReportingSuccessCount:
    description: The total number of requests to generate OpenSearch Dashboards reports.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpensearchDashboardsReportingSuccessCount
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.PrimaryWriteRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PrimaryWriteRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReadIOPS:
    description: The number of input and output (I/O) operations per second for read operations on EBS volumes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPS
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}/s"
  AWS/ES.ReadIOPSMicroBursting:
    description: The number of input and output (I/O) operations per second for read operations on EBS volumes when micro-bursting is taken into consideration.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPSMicroBursting
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}/s"
  AWS/ES.ReadLatency:
    description: "The latency, in seconds, for read operations on EBS volumes. "
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReadLatency
      namespace: AWS/ES
      statistics: Average
    unit: s
  AWS/ES.ReadThroughput:
    description: The throughput, in bytes per second, for read operations on EBS volumes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughput
      namespace: AWS/ES
      statistics: Average
    unit: By/s
  AWS/ES.ReadThroughputMicroBursting:
    description: The throughput, in bytes per second, for read operations on EBS volumes when micro-bursting is taken into consideration.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughputMicroBursting
      namespace: AWS/ES
      statistics: Average
    unit: By/s
  AWS/ES.RemoteStorageUsedSpace:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: RemoteStorageUsedSpace
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.RemoteStorageWriteRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteStorageWriteRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReplicaWriteRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicaWriteRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReplicationNumBootstrappingIndices:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicationNumBootstrappingIndices
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReplicationNumFailedIndices:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicationNumFailedIndices
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReplicationNumPausedIndices:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicationNumPausedIndices
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReplicationNumSyncingIndices:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicationNumSyncingIndices
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ReplicationRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicationRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SQLDefaultCursorRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SQLDefaultCursorRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SQLFailedRequestCountByCusErr:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SQLFailedRequestCountByCusErr
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SQLFailedRequestCountBySysErr:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SQLFailedRequestCountBySysErr
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SQLRequestCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SQLRequestCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SQLUnhealthy:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SQLUnhealthy
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SearchLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: SearchLatency
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.SearchRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SearchShardTaskCancelled:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchShardTaskCancelled
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SearchTaskCancelled:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchTaskCancelled
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SearchableDocuments:
    description: The total number of searchable documents across all data nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchableDocuments
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.SegmentCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SegmentCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.Shards.active:
    description: The total number of active primary and replica shards.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Shards.active
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.Shards.activePrimary:
    description: The number of active primary shards.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Shards.activePrimary
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.Shards.delayedUnassigned:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Shards.delayedUnassigned
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.Shards.initializing:
    description: The number of shards that are under initialization.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Shards.initializing
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.Shards.relocating:
    description: The number of shards that are under relocation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Shards.relocating
      namespace: AWS/ES
      statistics: Sum
    unit: "{Count}"
  AWS/ES.Shards.unassigned:
    description: The number of shards that are not allocated to nodes in the cluster.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Shards.unassigned
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.SysMemoryUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: SysMemoryUtilization
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.ThreadpoolBulkQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolBulkQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolBulkRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolBulkRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolBulkThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolBulkThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolForce_mergeQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolForce_mergeQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolForce_mergeRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolForce_mergeRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolForce_mergeThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolForce_mergeThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolIndexQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolIndexQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolIndexRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolIndexRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolIndexThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolIndexThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolSearchQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolSearchQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolSearchRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolSearchRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolSearchThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolSearchThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolWriteQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolWriteQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolWriteRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolWriteRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThreadpoolWriteThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThreadpoolWriteThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.Threadpoolsql-workerQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Threadpoolsql-workerQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.Threadpoolsql-workerRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Threadpoolsql-workerRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.Threadpoolsql-workerThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Threadpoolsql-workerThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.ThroughputThrottle:
    description: Indicates whether or not disks have been throttled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThroughputThrottle
      namespace: AWS/ES
      statistics: Maximum
    unit: "{Count}"
  AWS/ES.TotalPointInTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TotalPointInTime
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmCPUUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: WarmCPUUtilization
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.WarmFreeStorageSpace:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: WarmFreeStorageSpace
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.WarmJVMGCOldCollectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmJVMGCOldCollectionCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmJVMGCYoungCollectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmJVMGCYoungCollectionCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmJVMGCYoungCollectionTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: WarmJVMGCYoungCollectionTime
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.WarmJVMMemoryPressure:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: WarmJVMMemoryPressure
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.WarmOldGenJVMMemoryPressure:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: WarmOldGenJVMMemoryPressure
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.WarmSearchLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: WarmSearchLatency
      namespace: AWS/ES
      statistics: Average
    unit: ms
  AWS/ES.WarmSearchRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmSearchRate
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmSearchableDocuments:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmSearchableDocuments
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmStorageSpaceUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Megabytes
      metric: WarmStorageSpaceUtilization
      namespace: AWS/ES
      statistics: Average
    unit: MBy
  AWS/ES.WarmSysMemoryUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: WarmSysMemoryUtilization
      namespace: AWS/ES
      statistics: Average
    unit: "%"
  AWS/ES.WarmThreadpoolSearchQueue:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmThreadpoolSearchQueue
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmThreadpoolSearchRejected:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmThreadpoolSearchRejected
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmThreadpoolSearchThreads:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmThreadpoolSearchThreads
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmToColdMigrationFailureCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmToColdMigrationFailureCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmToColdMigrationLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmToColdMigrationLatency
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmToColdMigrationQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmToColdMigrationQueueSize
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmToColdMigrationSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmToColdMigrationSuccessCount
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WarmToHotMigrationQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WarmToHotMigrationQueueSize
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WriteIOPS:
    description: The number of input and output (I/O) operations per second for write operations on EBS volumes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: WriteIOPS
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}/s"
  AWS/ES.WriteIOPSMicroBursting:
    description: The number of input and output (I/O) operations per second for write operations on EBS volumes when micro-bursting is taken into consideration.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WriteIOPSMicroBursting
      namespace: AWS/ES
      statistics: Average
    unit: "{Count}"
  AWS/ES.WriteLatency:
    description: The latency, in seconds, for write operations on EBS volumes. This metric is also available for individual nodes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: WriteLatency
      namespace: AWS/ES
      statistics: Average
    unit: s
  AWS/ES.WriteThroughput:
    description: The throughput, in bytes per second, for write operations on EBS volumes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughput
      namespace: AWS/ES
      statistics: Average
    unit: By/s
  AWS/ES.WriteThroughputMicroBursting:
    description: The throughput, in bytes per second, for write operations on EBS volumes when micro-bursting is taken into consideration.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughputMicroBursting
      namespace: AWS/ES
      statistics: Average
    unit: By/s
  AWS/ElastiCache.ActiveDefragHits:
    description: The number of value reallocations per minute performed by the active defragmentation process.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveDefragHits
      namespace: AWS/ElastiCache
      statistics: Sum
    unit: "{Count}"
  AWS/ElastiCache.AuthenticationFailures:
    description: The total number of failed attempts to authenticate to Redis OSS using the AUTH command.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AuthenticationFailures
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.BytesReadFromDisk:
    description: The total number of bytes read from disk per minute. Supported only for clusters using Data tiering.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesReadFromDisk
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.BytesReadIntoMemcached:
    description: The number of bytes that have been read from the network by the cache node.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesReadIntoMemcached
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.BytesUsedForCache:
    description: The total number of bytes allocated by Redis OSS for all purposes, including the dataset, buffers, and so on.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesUsedForCache
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.BytesUsedForCacheItems:
    description: The number of bytes used to store cache items.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesUsedForCacheItems
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.BytesUsedForHash:
    description: The total number of bytes used to store hash data structures.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesUsedForHash
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.BytesWrittenOutFromMemcached:
    description: The number of bytes that have been written to the network by the cache node.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesWrittenOutFromMemcached
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.BytesWrittenToDisk:
    description: The total number of bytes written to disk per minute. Supported only for clusters using Data tiering.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesWrittenToDisk
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.CPUCreditBalance:
    description: The remaining CPU credits available for burstable performance instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditBalance
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CPUCreditUsage:
    description: The number of CPU credits consumed during the specified period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditUsage
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CPUUtilization:
    description: The percentage of CPU utilization.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.CacheHitRate:
    description: "Indicates the usage efficiency of the Redis OSS instance. This is calculated using cache_hits and cache_misses statistics in the following way: cache_hits /(cache_hits + cache_misses)."
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CacheHitRate
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.CacheHits:
    description: The number of successful read-only key lookups in the main dictionary. This is derived from keyspace_hits statistic at Redis OSS INFO.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CacheHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CacheMisses:
    description: The number of unsuccessful read-only key lookups in the main dictionary. This is derived from keyspace_misses statistic at Redis OSS INFO.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CacheMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CasBadval:
    description: The number of CAS (check and set) requests the cache has received where the Cas value did not match the Cas value stored.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CasBadval
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CasHits:
    description: The number of Cas requests the cache has received where the requested key was found and the Cas value matched.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CasHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CasMisses:
    description: The number of Cas requests the cache has received where the key requested was not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CasMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ChannelAuthorizationFailures:
    description: The total number of failed attempts by users to access channels they do not have permission to access.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChannelAuthorizationFailures
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ClusterBasedCmds:
    description: The total number of commands that are cluster-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClusterBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ClusterBasedCmdsLatency:
    description: Latency of cluster-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ClusterBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.CmdConfigGet:
    description: The number of config get commands the cache has received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CmdConfigGet
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CmdConfigSet:
    description: The number of config set commands the cache has received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CmdConfigSet
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CmdFlush:
    description: The number of flush commands the cache has received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CmdFlush
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CmdGet:
    description: The number of get commands the cache has received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CmdGet
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CmdSet:
    description: The number of set commands the cache has received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CmdSet
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CmdTouch:
    description: The number of touch commands the cache has received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CmdTouch
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CommandAuthorizationFailures:
    description: The total number of failed attempts by users to run commands they don’t have permission to call.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CommandAuthorizationFailures
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CurrConfig:
    description: The current number of configuration settings.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrConfig
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CurrConnections:
    description: A count of the number of connections connected to the cache at an instant in time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrConnections
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CurrItems:
    description: A count of the number of items currently stored in the cache.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrItems
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.CurrVolatileItems:
    description: Total number of keys in all databases that have a ttl set. This is derived from the Redis OSS expires statistic, summing all of the keys with a ttl set in the entire keyspace.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrVolatileItems
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.DB0AverageTTL:
    description: Exposes avg_ttl of DBO from the keyspace statistic of Redis OSS INFO command.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DB0AverageTTL
      namespace: AWS/ElastiCache
      statistics: Average
    unit: ms
  AWS/ElastiCache.DatabaseCapacityUsageCountedForEvictPercentage:
    description: Percentage of the total data capacity for the cluster that is in use, excluding the memory used for overhead and COB.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: DatabaseCapacityUsageCountedForEvictPercentage
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.DatabaseCapacityUsagePercentage:
    description: Percentage of the total data capacity for the cluster that is in use.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: DatabaseCapacityUsagePercentage
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.DatabaseMemoryUsageCountedForEvictPercentage:
    description: Percentage of the memory for the cluster that is in use, excluding memory used for overhead and COB.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: DatabaseMemoryUsageCountedForEvictPercentage
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.DatabaseMemoryUsagePercentage:
    description: Percentage of the memory for the cluster that is in use. This is calculated using used_memory/maxmemory from Redis OSS INFO.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: DatabaseMemoryUsagePercentage
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.DecrHits:
    description: The number of decrement requests the cache has received where the requested key was found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DecrHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.DecrMisses:
    description: The number of decrement requests the cache has received where the requested key was not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DecrMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.DeleteHits:
    description: The number of delete requests the cache has received where the requested key was found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeleteHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.DeleteMisses:
    description: The number of delete requests the cache has received where the requested key was not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeleteMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.EngineCPUUtilization:
    description: Provides CPU utilization of the Redis OSS engine thread.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EngineCPUUtilization
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "%"
  AWS/ElastiCache.EvalBasedCmds:
    description: The total number of commands for eval-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EvalBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.EvalBasedCmdsLatency:
    description: Latency of eval-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: EvalBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.EvictedUnfetched:
    description: The number of valid items evicted from the least recently used cache (LRU) which were never touched after being set.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EvictedUnfetched
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.Evictions:
    description: The number of non-expired items the cache evicted to allow space for new writes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Evictions
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ExpiredUnfetched:
    description: The number of unfetched items evicted from the cache.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExpiredUnfetched
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.FreeableMemory:
    description: The amount of memory available for new allocations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeableMemory
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.GeoSpatialBasedCmds:
    description: The total number of commands for geospatial-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GeoSpatialBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.GeoSpatialBasedCmdsLatency:
    description: Latency of geospatial-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: GeoSpatialBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.GetHits:
    description: The number of get requests the cache has received where the key requested was found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.GetMisses:
    description: The number of get requests the cache has received where the key requested was not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.GetTypeCmds:
    description: The total number of read-only type commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetTypeCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.GetTypeCmdsLatency:
    description: Latency of read commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: GetTypeCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.GlobalDatastoreReplicationLag:
    description: This is the lag between the secondary Region's primary node and the primary Region's primary node.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: GlobalDatastoreReplicationLag
      namespace: AWS/ElastiCache
      statistics: Average
    unit: s
  AWS/ElastiCache.HashBasedCmds:
    description: The total number of commands that are hash-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HashBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.HashBasedCmdsLatency:
    description: Latency of hash-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: HashBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.HyperLogLogBasedCmds:
    description: The total number of HyperLogLog-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HyperLogLogBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.HyperLogLogBasedCmdsLatency:
    description: Latency of HyperLogLog-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: HyperLogLogBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.IamAuthenticationExpirations:
    description: "The total number of expired IAM-authenticated Redis OSS connections. "
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IamAuthenticationExpirations
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.IamAuthenticationThrottling:
    description: The total number of throttled IAM-authenticated Redis OSS AUTH or HELLO requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IamAuthenticationThrottling
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.IncrHits:
    description: The number of increment requests the cache has received where the key requested was found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IncrHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.IncrMisses:
    description: The number of increment requests the cache has received where the key requested was not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IncrMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.IsMaster:
    description: Indicates whether the node is the primary node of current shard/cluster. The metric can be either 0 (not primary) or 1 (primary).
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: IsMaster
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "1"
  AWS/ElastiCache.IsPrimary:
    description: Indicates whether the node is the primary node of current shard/cluster. The metric can be either 0 (not primary) or 1 (primary).
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: IsPrimary
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "1"
  AWS/ElastiCache.JsonBasedCmds:
    description: The total number of JSON commands, including both read and write commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JsonBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.JsonBasedCmdsLatency:
    description: Latency of all JSON commands, including both read and write commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: JsonBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.JsonBasedGetCmds:
    description: The total number of JSON read-only commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JsonBasedGetCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.JsonBasedGetCmdsLatency:
    description: Latency of JSON read-only commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: JsonBasedGetCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.JsonBasedSetCmds:
    description: The total number of JSON write commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JsonBasedSetCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.JsonBasedSetCmdsLatency:
    description: Latency of JSON write commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: JsonBasedSetCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.KeyAuthorizationFailures:
    description: The total number of failed attempts by users to access keys they don’t have permission to access.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeyAuthorizationFailures
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.KeyBasedCmds:
    description: The total number of commands that are key-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeyBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.KeyBasedCmdsLatency:
    description: Latency of key-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: KeyBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.KeysTracked:
    description: The number of keys being tracked by Redis OSS key tracking as a percentage of tracking-table-max-keys.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeysTracked
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ListBasedCmds:
    description: The total number of commands that are list-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ListBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ListBasedCmdsLatency:
    description: Latency of list-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ListBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.MasterLinkHealthStatus:
    description: "This status has two values: 0 or 1. The value 0 indicates that data in the ElastiCache primary node is not in sync with Redis OSS on EC2. The value of 1 indicates that the data is in sync."
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MasterLinkHealthStatus
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.MemoryFragmentationRatio:
    description: Indicates the efficiency in the allocation of memory of the Redis OSS engine.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MemoryFragmentationRatio
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkBandwidthInAllowanceExceeded:
    description: The number of times the inbound network bandwidth allowance has been exceeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkBandwidthInAllowanceExceeded
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkBandwidthOutAllowanceExceeded:
    description: The number of times the outbound network bandwidth allowance has been exceeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkBandwidthOutAllowanceExceeded
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkBytesIn:
    description: The number of bytes received by the cache node over the network.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkBytesIn
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.NetworkBytesOut:
    description: The number of bytes sent by the cache node over the network.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkBytesOut
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.NetworkConntrackAllowanceExceeded:
    description: The number of times the network connection tracking allowance has been exceeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkConntrackAllowanceExceeded
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkLinkLocalAllowanceExceeded:
    description: The number of times the network link local allowance has been exceeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkLinkLocalAllowanceExceeded
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkPacketsIn:
    description: The number of packets received by the cache node over the network.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsIn
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkPacketsOut:
    description: The number of packets sent by the cache node over the network.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsOut
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NetworkPacketsPerSecondAllowanceExceeded:
    description: The number of times the packets per second allowance has been exceeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsPerSecondAllowanceExceeded
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NewConnections:
    description: The total number of connections that have been accepted by the server during this period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewConnections
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NewItems:
    description: The number of new items the cache has stored. This is derived from the memcached total_items statistic by recording the change in total_items across a period of time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewItems
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NonKeyTypeCmds:
    description: The total number of commands that are not key-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NonKeyTypeCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NonKeyTypeCmdsLatency:
    description: Latency of non-key-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: NonKeyTypeCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.NumItemsReadFromDisk:
    description: The total number of items retrieved from disk per minute.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumItemsReadFromDisk
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.NumItemsWrittenToDisk:
    description: The total number of items written to disk per minute.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumItemsWrittenToDisk
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.PrimaryLinkHealthStatus:
    description: The health status of the primary node.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PrimaryLinkHealthStatus
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.PubSubBasedCmds:
    description: The total number of commands for pub/sub functionality.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PubSubBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.PubSubBasedCmdsLatency:
    description: Latency of pub/sub-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: PubSubBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.Reclaimed:
    description: The number of expired items the cache evicted to allow space for new writes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Reclaimed
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.ReplicationBytes:
    description: It reports the number of bytes that the primary is sending to all of its replicas.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ReplicationBytes
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.ReplicationLag:
    description: The replication lag between the primary and the replica nodes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReplicationLag
      namespace: AWS/ElastiCache
      statistics: Average
    unit: s
  AWS/ElastiCache.SaveInProgress:
    description: Indicates whether a snapshot (RDB) is currently being taken. This metric can be either 0 (no save in progress) or 1 (save in progress).
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SaveInProgress
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.SetBasedCmds:
    description: The total number of commands that are set-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SetBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.SetBasedCmdsLatency:
    description: Latency of set-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: SetBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.SetTypeCmds:
    description: The total number of write types of commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SetTypeCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.SetTypeCmdsLatency:
    description: Latency of write commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: SetTypeCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.SlabsMoved:
    description: The total number of slab pages that have been moved.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SlabsMoved
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.SortedSetBasedCmds:
    description: The total number of commands that are sorted set-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SortedSetBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.SortedSetBasedCmdsLatency:
    description: Latency of sorted-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: SortedSetBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.StreamBasedCmds:
    description: The total number of commands that are stream-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StreamBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.StreamBasedCmdsLatency:
    description: Latency of stream-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: StreamBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.StringBasedCmds:
    description: The total number of commands that are string-based.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StringBasedCmds
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.StringBasedCmdsLatency:
    description: Latency of string-based commands.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: StringBasedCmdsLatency
      namespace: AWS/ElastiCache
      statistics: Average
    unit: us
  AWS/ElastiCache.SwapUsage:
    description: This is a host-level metric reported in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SwapUsage
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/ElastiCache.TouchHits:
    description: The number of keys that have been touched and were given a new expiration time.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TouchHits
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.TouchMisses:
    description: The number of items that have been touched, but were not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TouchMisses
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.TrafficManagementActive:
    description: Indicates whether ElastiCache (Redis OSS) is actively managing traffic by adjusting traffic allocated to incoming commands, monitoring or replication.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TrafficManagementActive
      namespace: AWS/ElastiCache
      statistics: Average
    unit: "{Count}"
  AWS/ElastiCache.UnusedMemory:
    description: The amount of memory not used by data.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: UnusedMemory
      namespace: AWS/ElastiCache
      statistics: Average
    unit: By
  AWS/Events.DeadLetterInvocations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeadLetterInvocations
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.Events:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Events
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.FailedInvocations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FailedInvocations
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.IngestiontoInvocationCompleteLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: IngestiontoInvocationCompleteLatency
      namespace: AWS/Events
      statistics: Average
    unit: ms
  AWS/Events.IngestiontoInvocationStartLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: IngestiontoInvocationStartLatency
      namespace: AWS/Events
      statistics: Average
    unit: ms
  AWS/Events.InvocationAttempts:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationAttempts
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.Invocations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Invocations
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.InvocationsCreated:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationsCreated
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.InvocationsFailedToBeSentToDlq:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationsFailedToBeSentToDlq
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.InvocationsSentToDlq:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvocationsSentToDlq
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.MatchedEvents:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MatchedEvents
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsApproximateCallCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutEventsApproximateCallCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsApproximateFailedCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutEventsApproximateFailedCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsApproximateSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutEventsApproximateSuccessCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsApproximateThrottledCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutEventsApproximateThrottledCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsEntriesCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutEventsEntriesCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsFailedEntriesCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutEventsFailedEntriesCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutEventsLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PutEventsLatency
      namespace: AWS/Events
      statistics: Average
    unit: ms
  AWS/Events.PutEventsRequestSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: PutEventsRequestSize
      namespace: AWS/Events
      statistics: Average
    unit: By
  AWS/Events.PutPartnerEventsApproximateCallCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutPartnerEventsApproximateCallCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutPartnerEventsApproximateFailedCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutPartnerEventsApproximateFailedCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutPartnerEventsApproximateSuccessCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutPartnerEventsApproximateSuccessCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutPartnerEventsApproximateThrottledCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutPartnerEventsApproximateThrottledCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutPartnerEventsEntriesCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutPartnerEventsEntriesCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutPartnerEventsFailedEntriesCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutPartnerEventsFailedEntriesCount
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.PutPartnerEventsLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PutPartnerEventsLatency
      namespace: AWS/Events
      statistics: Average
    unit: ms
  AWS/Events.RetryInvocationAttempts:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RetryInvocationAttempts
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.SuccessfulInvocationAttempts:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SuccessfulInvocationAttempts
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.ThrottledRules:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledRules
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Events.TriggeredRules:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TriggeredRules
      namespace: AWS/Events
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ActivePartitionsLimit:
    description: The maximum number of active partitions allowed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivePartitionsLimit
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.BackupToS3.Bytes:
    description: The total number of bytes backed up to Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BackupToS3.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.BackupToS3.DataFreshness:
    description: The age of the oldest record in the Amazon S3 backup.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: BackupToS3.DataFreshness
      namespace: AWS/Firehose
      statistics: Average
    unit: s
  AWS/Firehose.BackupToS3.Records:
    description: The total number of records backed up to Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BackupToS3.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.BackupToS3.Success:
    description: The number of successful Amazon S3 backup operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BackupToS3.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.BytesPerSecondLimit:
    description: The limit on the number of bytes that can be processed per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: BytesPerSecondLimit
      namespace: AWS/Firehose
      statistics: Average
    unit: By/s
  AWS/Firehose.DataReadFromKinesisStream.Bytes:
    description: The total number of bytes read from the Kinesis stream.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DataReadFromKinesisStream.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DataReadFromKinesisStream.Records:
    description: The total number of records read from the Kinesis stream.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataReadFromKinesisStream.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DataReadFromSource.Backpressured:
    description: A flag indicating if the data read from the source is backpressured.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DataReadFromSource.Backpressured
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DataReadFromSource.Bytes:
    description: The total number of bytes read from the source.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DataReadFromSource.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DataReadFromSource.Records:
    description: The total number of records read from the source.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DataReadFromSource.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToAmazonOpenSearchServerless.AuthFailure:
    description: A flag indicating an authentication failure during delivery to Amazon OpenSearch Serverless.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToAmazonOpenSearchServerless.AuthFailure
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToAmazonOpenSearchServerless.Bytes:
    description: The total number of bytes delivered to Amazon OpenSearch Serverless.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DeliveryToAmazonOpenSearchServerless.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DeliveryToAmazonOpenSearchServerless.DataFreshness:
    description: The age of the oldest record in Amazon OpenSearch Serverless.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: DeliveryToAmazonOpenSearchServerless.DataFreshness
      namespace: AWS/Firehose
      statistics: Average
    unit: s
  AWS/Firehose.DeliveryToAmazonOpenSearchServerless.DeliveryRejected:
    description: A flag indicating delivery rejection to Amazon OpenSearch Serverless.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToAmazonOpenSearchServerless.DeliveryRejected
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToAmazonOpenSearchServerless.Records:
    description: The total number of records delivered to Amazon OpenSearch Serverless.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToAmazonOpenSearchServerless.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToAmazonOpenSearchServerless.Success:
    description: The number of successful delivery operations to Amazon OpenSearch Serverless.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToAmazonOpenSearchServerless.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToAmazonOpenSearchService.AuthFailure:
    description: A flag indicating an authentication failure during delivery to Amazon OpenSearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToAmazonOpenSearchService.AuthFailure
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToAmazonOpenSearchService.Bytes:
    description: The total number of bytes delivered to Amazon OpenSearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DeliveryToAmazonOpenSearchService.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DeliveryToAmazonOpenSearchService.DataFreshness:
    description: The age of the oldest record in Amazon OpenSearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: DeliveryToAmazonOpenSearchService.DataFreshness
      namespace: AWS/Firehose
      statistics: Average
    unit: s
  AWS/Firehose.DeliveryToAmazonOpenSearchService.DeliveryRejected:
    description: A flag indicating delivery rejection to Amazon OpenSearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToAmazonOpenSearchService.DeliveryRejected
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToAmazonOpenSearchService.Records:
    description: The total number of records delivered to Amazon OpenSearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToAmazonOpenSearchService.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToAmazonOpenSearchService.Success:
    description: The number of successful delivery operations to Amazon OpenSearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToAmazonOpenSearchService.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToElasticsearch.Bytes:
    description: The total number of bytes delivered to Amazon Elasticsearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DeliveryToElasticsearch.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DeliveryToElasticsearch.Records:
    description: The total number of records delivered to Amazon Elasticsearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToElasticsearch.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToElasticsearch.Success:
    description: The number of successful delivery operations to Amazon Elasticsearch Service.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToElasticsearch.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToRedshift.Bytes:
    description: The total number of bytes delivered to Amazon Redshift.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DeliveryToRedshift.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DeliveryToRedshift.Records:
    description: The total number of records delivered to Amazon Redshift.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToRedshift.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToRedshift.Success:
    description: The number of successful delivery operations to Amazon Redshift.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToRedshift.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToS3.Bytes:
    description: The total number of bytes delivered to Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DeliveryToS3.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DeliveryToS3.DataFreshness:
    description: The age of the oldest record in Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: DeliveryToS3.DataFreshness
      namespace: AWS/Firehose
      statistics: Average
    unit: s
  AWS/Firehose.DeliveryToS3.ObjectCount:
    description: The total number of objects delivered to Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToS3.ObjectCount
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToS3.Records:
    description: The total number of records delivered to Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToS3.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToS3.Success:
    description: The number of successful delivery operations to Amazon S3.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToS3.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DeliveryToSplunk.Bytes:
    description: The total number of bytes delivered to Splunk.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: DeliveryToSplunk.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.DeliveryToSplunk.DataAckLatency:
    description: The latency for acknowledgment of data delivery to Splunk.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: DeliveryToSplunk.DataAckLatency
      namespace: AWS/Firehose
      statistics: Average
    unit: s
  AWS/Firehose.DeliveryToSplunk.DataFreshness:
    description: The age of the oldest record in Splunk.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: DeliveryToSplunk.DataFreshness
      namespace: AWS/Firehose
      statistics: Average
    unit: s
  AWS/Firehose.DeliveryToSplunk.Records:
    description: The total number of records delivered to Splunk.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeliveryToSplunk.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.DeliveryToSplunk.Success:
    description: The number of successful delivery operations to Splunk.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryToSplunk.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.DescribeDeliveryStream.Latency:
    description: The latency for DescribeDeliveryStream requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DescribeDeliveryStream.Latency
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.DescribeDeliveryStream.Requests:
    description: The total number of DescribeDeliveryStream requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DescribeDeliveryStream.Requests
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ExecuteProcessing.Duration:
    description: The duration for executing processing.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ExecuteProcessing.Duration
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.ExecuteProcessing.Success:
    description: A flag indicating successful processing execution.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ExecuteProcessing.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.FailedConversion.Bytes:
    description: The total number of bytes that failed conversion.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FailedConversion.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.FailedConversion.Records:
    description: The total number of records that failed conversion.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FailedConversion.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.FailedValidation.Bytes:
    description: The total number of bytes that failed validation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FailedValidation.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.FailedValidation.Records:
    description: The total number of records that failed validation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FailedValidation.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.IncomingBytes:
    description: The total number of bytes incoming to the delivery stream.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: IncomingBytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.IncomingPutRequests:
    description: The total number of put requests to the delivery stream.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IncomingPutRequests
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.IncomingRecords:
    description: The total number of records incoming to the delivery stream.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IncomingRecords
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.JQProcessing.Duration:
    description: The time taken to process records with JQ transformation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: JQProcessing.Duration
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.KMSKeyAccessDenied:
    description: The total number of times access to the KMS key was denied.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KMSKeyAccessDenied
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.KMSKeyDisabled:
    description: The total number of times the KMS key was disabled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KMSKeyDisabled
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.KMSKeyInvalidState:
    description: The total number of times the KMS key was in an invalid state.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KMSKeyInvalidState
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.KMSKeyNotFound:
    description: The total number of times the KMS key was not found.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KMSKeyNotFound
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.KafkaOffsetLag:
    description: The offset lag in Kafka.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KafkaOffsetLag
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.KinesisMillisBehindLatest:
    description: The latency in milliseconds for records read from the Kinesis stream.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: KinesisMillisBehindLatest
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.ListDeliveryStreams.Latency:
    description: The latency for ListDeliveryStreams requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ListDeliveryStreams.Latency
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.ListDeliveryStreams.Requests:
    description: The total number of ListDeliveryStreams requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ListDeliveryStreams.Requests
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.OutputDecompressedBytes.Failed:
    description: The total number of decompressed bytes that failed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: OutputDecompressedBytes.Failed
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.OutputDecompressedBytes.Success:
    description: The total number of decompressed bytes that were successfully output.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: OutputDecompressedBytes.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.OutputDecompressedRecords.Failed:
    description: The total number of decompressed records that failed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OutputDecompressedRecords.Failed
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.OutputDecompressedRecords.Success:
    description: The total number of decompressed records that were successfully output.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OutputDecompressedRecords.Success
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.PartitionCount:
    description: The current number of active partitions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PartitionCount
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.PartitionCountExceeded:
    description: A flag indicating if the partition count has exceeded the allowed limit.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: PartitionCountExceeded
      namespace: AWS/Firehose
      statistics: Average
    unit: "1"
  AWS/Firehose.PerPartitionThroughput:
    description: The throughput per partition in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: PerPartitionThroughput
      namespace: AWS/Firehose
      statistics: Average
    unit: By/s
  AWS/Firehose.PutRecord.Bytes:
    description: The total number of bytes in PutRecord requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: PutRecord.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.PutRecord.Latency:
    description: The latency for PutRecord requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PutRecord.Latency
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.PutRecord.Requests:
    description: The total number of PutRecord requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecord.Requests
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.PutRecordBatch.Bytes:
    description: The total number of bytes in PutRecordBatch requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: PutRecordBatch.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.PutRecordBatch.Latency:
    description: The latency for PutRecordBatch requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PutRecordBatch.Latency
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.PutRecordBatch.Records:
    description: The total number of records in PutRecordBatch requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecordBatch.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.PutRecordBatch.Requests:
    description: The total number of PutRecordBatch requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecordBatch.Requests
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.PutRequestsPerSecondLimit:
    description: The limit on the number of PutRecord requests per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRequestsPerSecondLimit
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.RecordsPerSecondLimit:
    description: The limit on the number of records that can be processed per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RecordsPerSecondLimit
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ResourceCount:
    description: The total number of resources.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ResourceCount
      namespace: AWS/Firehose
      statistics: Maximum
    unit: "{Count}"
  AWS/Firehose.SourceThrottled.Delay:
    description: The delay in milliseconds due to throttling at the source.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: SourceThrottled.Delay
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.SucceedConversion.Bytes:
    description: The total number of bytes that were successfully converted.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SucceedConversion.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.SucceedConversion.Records:
    description: The total number of records that were successfully converted.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SucceedConversion.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.SucceedProcessing.Bytes:
    description: The total number of bytes that were successfully processed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SucceedProcessing.Bytes
      namespace: AWS/Firehose
      statistics: Average
    unit: By
  AWS/Firehose.SucceedProcessing.Records:
    description: The total number of records that were successfully processed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SucceedProcessing.Records
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ThrottledDescribeStream:
    description: The total number of throttled DescribeStream requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledDescribeStream
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ThrottledGetRecords:
    description: The total number of throttled GetRecords requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledGetRecords
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ThrottledGetShardIterator:
    description: The total number of throttled GetShardIterator requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledGetShardIterator
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.ThrottledRecords:
    description: The total number of records that were throttled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledRecords
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Firehose.UpdateDeliveryStream.Latency:
    description: The latency for UpdateDeliveryStream requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: UpdateDeliveryStream.Latency
      namespace: AWS/Firehose
      statistics: Average
    unit: ms
  AWS/Firehose.UpdateDeliveryStream.Requests:
    description: The total number of UpdateDeliveryStream requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UpdateDeliveryStream.Requests
      namespace: AWS/Firehose
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ActiveControllerCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ActiveControllerCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "1"
  AWS/Kafka.BurstBalance:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: BurstBalance
      namespace: AWS/Kafka
      statistics: Average
    unit: "1"
  AWS/Kafka.BwInAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BwInAllowanceExceeded
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.BwOutAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BwOutAllowanceExceeded
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.BytesInPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesInPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.BytesOutPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesOutPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.CPUCreditBalance:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: CPUCreditBalance
      namespace: AWS/Kafka
      statistics: Average
    unit: "1"
  AWS/Kafka.ClientConnectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ConnTrackAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConnTrackAllowanceExceeded
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ConnectionCloseRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ConnectionCloseRate
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}/s"
  AWS/Kafka.ConnectionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConnectionCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ConnectionCreationRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ConnectionCreationRate
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}/s"
  AWS/Kafka.CpuCreditUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: CpuCreditUsage
      namespace: AWS/Kafka
      statistics: Average
    unit: "1"
  AWS/Kafka.CpuIdle:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CpuIdle
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.CpuIoWait:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CpuIoWait
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.CpuSystem:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CpuSystem
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.CpuUser:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CpuUser
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.EstimatedMaxTimeLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: EstimatedMaxTimeLag
      namespace: AWS/Kafka
      statistics: Average
    unit: s
  AWS/Kafka.EstimatedTimeLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EstimatedTimeLag
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.FetchConsumerLocalTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchConsumerLocalTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchConsumerRequestQueueTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchConsumerRequestQueueTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchConsumerResponseQueueTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchConsumerResponseQueueTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchConsumerResponseSendTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchConsumerResponseSendTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchConsumerTotalTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchConsumerTotalTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchFollowerLocalTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchFollowerLocalTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchFollowerRequestQueueTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchFollowerRequestQueueTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchFollowerResponseQueueTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchFollowerResponseQueueTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchFollowerResponseSendTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchFollowerResponseSendTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchFollowerTotalTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchFollowerTotalTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.FetchMessageConversionsPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FetchMessageConversionsPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.FetchThrottleByteRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: FetchThrottleByteRate
      namespace: AWS/Kafka
      statistics: Average
    unit: By/s
  AWS/Kafka.FetchThrottleQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FetchThrottleQueueSize
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.FetchThrottleTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FetchThrottleTime
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.GlobalPartitionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GlobalPartitionCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.GlobalTopicCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GlobalTopicCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.HeapMemoryAfterGC:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: HeapMemoryAfterGC
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.IAMNumberOfConnectionRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: IAMNumberOfConnectionRequests
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}/s"
  AWS/Kafka.IAMTooManyConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IAMTooManyConnections
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.KafkaAppLogsDiskUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: KafkaAppLogsDiskUsed
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.KafkaDataLogsDiskUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: KafkaDataLogsDiskUsed
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.LeaderCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LeaderCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.MaxOffsetLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: MaxOffsetLag
      namespace: AWS/Kafka
      statistics: Average
    unit: "1"
  AWS/Kafka.MemoryBuffered:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MemoryBuffered
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.MemoryCached:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MemoryCached
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.MemoryFree:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MemoryFree
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.MemoryUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: MemoryUsed
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.MessagesInPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MessagesInPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.NetworkProcessorAvgIdlePercent:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: NetworkProcessorAvgIdlePercent
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.NetworkRxDropped:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkRxDropped
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.NetworkRxErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkRxErrors
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.NetworkRxPackets:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkRxPackets
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.NetworkTxDropped:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkTxDropped
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.NetworkTxErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkTxErrors
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.NetworkTxPackets:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkTxPackets
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.OfflinePartitionsCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OfflinePartitionsCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.OffsetLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OffsetLag
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.PartitionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PartitionCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.PpsAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PpsAllowanceExceeded
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ProduceLocalTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceLocalTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ProduceMessageConversionsPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProduceMessageConversionsPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ProduceMessageConversionsTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceMessageConversionsTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ProduceRequestQueueTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceRequestQueueTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ProduceResponseQueueTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceResponseQueueTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ProduceResponseSendTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceResponseSendTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ProduceThrottleByteRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ProduceThrottleByteRate
      namespace: AWS/Kafka
      statistics: Average
    unit: By/s
  AWS/Kafka.ProduceThrottleQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProduceThrottleQueueSize
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ProduceThrottleTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceThrottleTime
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ProduceTotalTimeMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ProduceTotalTimeMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.RemoteCopyBytesPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: RemoteCopyBytesPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: By/s
  AWS/Kafka.RemoteCopyErrorsPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteCopyErrorsPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.RemoteCopyLagBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: RemoteCopyLagBytes
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.RemoteFetchBytesPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: RemoteFetchBytesPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: By/s
  AWS/Kafka.RemoteFetchErrorsPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteFetchErrorsPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.RemoteFetchRequestsPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteFetchRequestsPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.RemoteLogManagerTasksAvgIdlePercent:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteLogManagerTasksAvgIdlePercent
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.RemoteLogReaderAvgIdlePercent:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteLogReaderAvgIdlePercent
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.RemoteLogReaderTaskQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RemoteLogReaderTaskQueueSize
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ReplicationBytesInPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReplicationBytesInPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: By/s
  AWS/Kafka.ReplicationBytesOutPerSec:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReplicationBytesOutPerSec
      namespace: AWS/Kafka
      statistics: Average
    unit: By/s
  AWS/Kafka.RequestBytesMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: RequestBytesMean
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.RequestExemptFromThrottleTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: RequestExemptFromThrottleTime
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.RequestHandlerAvgIdlePercent:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: RequestHandlerAvgIdlePercent
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.RequestThrottleQueueSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestThrottleQueueSize
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.RequestThrottleTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: RequestThrottleTime
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.RequestTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: RequestTime
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.RootDiskUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: RootDiskUsed
      namespace: AWS/Kafka
      statistics: Average
    unit: "%"
  AWS/Kafka.SumOffsetLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: SumOffsetLag
      namespace: AWS/Kafka
      statistics: Average
    unit: "1"
  AWS/Kafka.SwapFree:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SwapFree
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.SwapUsed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SwapUsed
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.TcpConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TcpConnections
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.TrafficBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: TrafficBytes
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.TrafficShaping:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TrafficShaping
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.UnderMinIsrPartitionCount:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnderMinIsrPartitionCount
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.UnderReplicatedPartitions:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnderReplicatedPartitions
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.VolumeQueueLength:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeQueueLength
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.VolumeReadBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: VolumeReadBytes
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.VolumeReadOps:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeReadOps
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.VolumeTotalReadTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: VolumeTotalReadTime
      namespace: AWS/Kafka
      statistics: Average
    unit: s
  AWS/Kafka.VolumeTotalWriteTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: VolumeTotalWriteTime
      namespace: AWS/Kafka
      statistics: Average
    unit: s
  AWS/Kafka.VolumeWriteBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: VolumeWriteBytes
      namespace: AWS/Kafka
      statistics: Average
    unit: By
  AWS/Kafka.VolumeWriteOps:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeWriteOps
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kafka.ZooKeeperRequestLatencyMsMean:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ZooKeeperRequestLatencyMsMean
      namespace: AWS/Kafka
      statistics: Average
    unit: ms
  AWS/Kafka.ZooKeeperSessionState:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ZooKeeperSessionState
      namespace: AWS/Kafka
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.GetRecords.Bytes:
    description: Bytes retrieved from the Kinesis stream over the specified time period. Includes Minimum, Maximum, and Average statistics per GetRecords operation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: GetRecords.Bytes
      namespace: AWS/Kinesis
      statistics: Average
    unit: By
  AWS/Kinesis.GetRecords.IteratorAge:
    description: Deprecated. Use GetRecords.IteratorAgeMilliseconds.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetRecords.IteratorAge
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.GetRecords.IteratorAgeMilliseconds:
    description: Age of the last record in GetRecords calls against a Kinesis stream over time. Indicates consumer progress; zero means fully caught up.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: GetRecords.IteratorAgeMilliseconds
      namespace: AWS/Kinesis
      statistics: Average
    unit: ms
  AWS/Kinesis.GetRecords.Latency:
    description: Time per GetRecords operation over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: GetRecords.Latency
      namespace: AWS/Kinesis
      statistics: Average
    unit: ms
  AWS/Kinesis.GetRecords.Records:
    description: Records retrieved from the shard over the specified time period. Includes Minimum, Maximum, and Average statistics per GetRecords operation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetRecords.Records
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.GetRecords.Success:
    description: Successful GetRecords operations per stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetRecords.Success
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.IncomingBytes:
    description: Bytes successfully put to the Kinesis stream over the specified time period. Includes bytes from PutRecord and PutRecords operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: IncomingBytes
      namespace: AWS/Kinesis
      statistics: Average
    unit: By
  AWS/Kinesis.IncomingRecords:
    description: Records successfully put to the Kinesis stream over the specified time period. Includes record counts from PutRecord and PutRecords operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IncomingRecords
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.IteratorAgeMilliseconds:
    description: Age of the last record in GetRecords calls against a Kinesis stream over time. Indicates consumer progress; zero means fully caught up.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: IteratorAgeMilliseconds
      namespace: AWS/Kinesis
      statistics: Average
    unit: ms
  AWS/Kinesis.OutgoingBytes:
    description: Bytes published from the Kinesis stream to consumers over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: OutgoingBytes
      namespace: AWS/Kinesis
      statistics: Average
    unit: By
  AWS/Kinesis.OutgoingRecords:
    description: Records published from the Kinesis stream to consumers over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OutgoingRecords
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecord.Bytes:
    description: Bytes put to the Kinesis stream using PutRecord over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: PutRecord.Bytes
      namespace: AWS/Kinesis
      statistics: Average
    unit: By
  AWS/Kinesis.PutRecord.Latency:
    description: Time per PutRecord operation over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PutRecord.Latency
      namespace: AWS/Kinesis
      statistics: Average
    unit: ms
  AWS/Kinesis.PutRecord.Success:
    description: Successful PutRecord operations per Kinesis stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecord.Success
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecords.Bytes:
    description: Bytes put to the Kinesis stream using PutRecords over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: PutRecords.Bytes
      namespace: AWS/Kinesis
      statistics: Average
    unit: By
  AWS/Kinesis.PutRecords.FailedRecords:
    description: Records rejected due to internal failures in PutRecords operations per Kinesis data stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecords.FailedRecords
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecords.Latency:
    description: Time per PutRecords operation over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PutRecords.Latency
      namespace: AWS/Kinesis
      statistics: Average
    unit: ms
  AWS/Kinesis.PutRecords.Records:
    description: Deprecated. Use PutRecords.SuccessfulRecords.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecords.Records
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecords.Success:
    description: PutRecords operations where at least one record succeeded per Kinesis stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecords.Success
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecords.SuccessfulRecords:
    description: Successful records in a PutRecords operation per Kinesis data stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecords.SuccessfulRecords
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecords.ThrottledRecords:
    description: Records rejected due to throttling in PutRecords operations per Kinesis data stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecords.ThrottledRecords
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.PutRecords.TotalRecords:
    description: Total records sent in a PutRecords operation per Kinesis data stream over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRecords.TotalRecords
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.ReadProvisionedThroughputExceeded:
    description: GetRecords calls throttled for the stream over the specified time period. Average statistic commonly used.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReadProvisionedThroughputExceeded
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.SubscribeToShard.RateExceeded:
    description: Subscription attempt failure due to existing active subscription or exceeding allowed calls per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SubscribeToShard.RateExceeded
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.SubscribeToShard.Success:
    description: Successful establishment of SubscribeToShard subscription, emitted at least once every 5 minutes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SubscribeToShard.Success
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.SubscribeToShardEvent.Bytes:
    description: Bytes received from the shard per event over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SubscribeToShardEvent.Bytes
      namespace: AWS/Kinesis
      statistics: Average
    unit: By
  AWS/Kinesis.SubscribeToShardEvent.MillisBehindLatest:
    description: Milliseconds records are behind the stream's current tip, indicating consumer lag.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: SubscribeToShardEvent.MillisBehindLatest
      namespace: AWS/Kinesis
      statistics: Average
    unit: ms
  AWS/Kinesis.SubscribeToShardEvent.Records:
    description: Records received from the shard per event over the specified time period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SubscribeToShardEvent.Records
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.SubscribeToShardEvent.Success:
    description: Successful publication of an event, emitted when there's an active subscription.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SubscribeToShardEvent.Success
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Kinesis.WriteProvisionedThroughputExceeded:
    description: Records rejected due to throttling for the stream over the specified time period. Includes throttling from PutRecord and PutRecords operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: WriteProvisionedThroughputExceeded
      namespace: AWS/Kinesis
      statistics: Average
    unit: "{Count}"
  AWS/Lambda.AsyncEventAge:
    description: The age of the oldest asynchronous event.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AsyncEventAge
      namespace: AWS/Lambda
      statistics: Average
    unit: ms
  AWS/Lambda.AsyncEventsDropped:
    description: The number of asynchronous events dropped due to retries or expiration.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsyncEventsDropped
      namespace: AWS/Lambda
      statistics: Average
    unit: "{Count}"
  AWS/Lambda.AsyncEventsReceived:
    description: The number of asynchronous events received by the function.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AsyncEventsReceived
      namespace: AWS/Lambda
      statistics: Average
    unit: "{Count}"
  AWS/Lambda.ClaimedAccountConcurrency:
    description: The number of concurrent executions claimed by the account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClaimedAccountConcurrency
      namespace: AWS/Lambda
      statistics: Maximum
    unit: "{Count}"
  AWS/Lambda.ConcurrentExecutions:
    description: The number of function instances that are processing events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConcurrentExecutions
      namespace: AWS/Lambda
      statistics: Maximum
    unit: "{Count}"
  AWS/Lambda.DeadLetterErrors:
    description: The number of times Lambda attempts to send an event to a dead-letter queue but fails.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeadLetterErrors
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.DestinationDeliveryFailures:
    description: The number of times a function event fails to be delivered to a configured destination.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DestinationDeliveryFailures
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.Duration:
    description: The amount of time that your function code spends processing an event.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: Duration
      namespace: AWS/Lambda
      statistics: Average
    unit: ms
  AWS/Lambda.Errors:
    description: The number of invocations that result in an error.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Errors
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.Invocations:
    description: The number of times your Lambda function is invoked.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Invocations
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.IteratorAge:
    description: The age of the last record for each batch of records processed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: IteratorAge
      namespace: AWS/Lambda
      statistics: Average
    unit: ms
  AWS/Lambda.OffsetLag:
    description: The lag in milliseconds between the last record written to the stream and the time the Lambda function received it.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: OffsetLag
      namespace: AWS/Lambda
      statistics: Average
    unit: ms
  AWS/Lambda.OversizedRecordCount:
    description: The number of records that exceed the allowed size and are dropped.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OversizedRecordCount
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.PostRuntimeExtensionsDuration:
    description: The time taken by runtime extensions after the function execution.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: PostRuntimeExtensionsDuration
      namespace: AWS/Lambda
      statistics: Average
    unit: ms
  AWS/Lambda.ProvisionedConcurrencyInvocations:
    description: The number of times your Lambda function is invoked using provisioned concurrency.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedConcurrencyInvocations
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.ProvisionedConcurrencySpilloverInvocations:
    description: The number of times your Lambda function is invoked using provisioned concurrency but spillover occurs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedConcurrencySpilloverInvocations
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.ProvisionedConcurrencyUtilization:
    description: The utilization of the provisioned concurrency.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedConcurrencyUtilization
      namespace: AWS/Lambda
      statistics: Maximum
    unit: "{Count}"
  AWS/Lambda.ProvisionedConcurrentExecutions:
    description: The number of provisioned concurrency function instances that are processing events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedConcurrentExecutions
      namespace: AWS/Lambda
      statistics: Maximum
    unit: "{Count}"
  AWS/Lambda.RecursiveInvocationsDropped:
    description: The number of recursive invocations that were dropped.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RecursiveInvocationsDropped
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.Throttles:
    description: The number of times your Lambda function invocation is throttled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Throttles
      namespace: AWS/Lambda
      statistics: Sum
    unit: "{Count}"
  AWS/Lambda.UnreservedConcurrentExecutions:
    description: The number of unreserved concurrency function instances that are processing events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnreservedConcurrentExecutions
      namespace: AWS/Lambda
      statistics: Maximum
    unit: "{Count}"
  AWS/Lex.BotChannelAuthErrors:
    description: The number of authentication errors from bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelAuthErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.BotChannelConfigurationErrors:
    description: The number of configuration errors from bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelConfigurationErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.BotChannelInboundThrottledEvents:
    description: The number of inbound throttled events from bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelInboundThrottledEvents
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.BotChannelOutboundThrottledEvents:
    description: The number of outbound throttled events from bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelOutboundThrottledEvents
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.BotChannelRequestCount:
    description: The total number of requests received from bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelRequestCount
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.BotChannelResponseCardErrors:
    description: The number of errors encountered when creating response cards for bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelResponseCardErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.BotChannelSystemErrors:
    description: The number of system errors encountered from bot channels.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BotChannelSystemErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.ConversationLogsAudioDeliveryFailure:
    description: The number of failed audio delivery attempts for conversation logs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConversationLogsAudioDeliveryFailure
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.ConversationLogsAudioDeliverySuccess:
    description: The number of successful audio delivery attempts for conversation logs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConversationLogsAudioDeliverySuccess
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.ConversationLogsTextDeliveryFailure:
    description: The number of failed text delivery attempts for conversation logs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConversationLogsTextDeliveryFailure
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.ConversationLogsTextDeliverySuccess:
    description: The number of successful text delivery attempts for conversation logs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConversationLogsTextDeliverySuccess
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.KendraIndexAccessError:
    description: The number of errors encountered when accessing Kendra indexes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KendraIndexAccessError
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.KendraLatency:
    description: The latency of requests made to Kendra.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: KendraLatency
      namespace: AWS/Lex
      statistics: Average
    unit: ms
  AWS/Lex.KendraSuccess:
    description: The number of successful interactions with Kendra.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KendraSuccess
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.KendraSystemErrors:
    description: The number of system errors encountered when interacting with Kendra.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KendraSystemErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.KendraThrottledEvents:
    description: The number of throttled events encountered when interacting with Kendra.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KendraThrottledEvents
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.MissedUtteranceCount:
    description: The number of missed utterances during interactions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MissedUtteranceCount
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeConcurrency:
    description: The number of concurrent runtime executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeConcurrency
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeInvalidLambdaResponses:
    description: The number of invalid responses received from Lambda functions during runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeInvalidLambdaResponses
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeLambdaErrors:
    description: The number of errors encountered when invoking Lambda functions during runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeLambdaErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimePollyErrors:
    description: The number of errors encountered when using Polly for speech synthesis during runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimePollyErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeRequestCount:
    description: The total number of requests processed by the Lex runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeRequestCount
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeSucessfulRequestLatency:
    description: The latency of successful requests processed by the Lex runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: RuntimeSucessfulRequestLatency
      namespace: AWS/Lex
      statistics: Average
    unit: ms
  AWS/Lex.RuntimeSystemErrors:
    description: The number of system errors encountered during runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeSystemErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeThrottledEvents:
    description: The number of throttled events encountered during runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeThrottledEvents
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/Lex.RuntimeUserErrors:
    description: The number of user errors encountered during runtime.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RuntimeUserErrors
      namespace: AWS/Lex
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.ActiveDefragHits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveDefragHits
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.AuthenticationFailures:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AuthenticationFailures
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.BytesReadFromDisk:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesReadFromDisk
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.BytesUsedForMemoryDB:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesUsedForMemoryDB
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.BytesWrittenToDisk:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesWrittenToDisk
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.CPUUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "%"
  AWS/MemoryDB.CommandAuthorizationFailures:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CommandAuthorizationFailures
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.CurrConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrConnections
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.CurrItems:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CurrItems
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.DB0AverageTTL:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DB0AverageTTL
      namespace: AWS/MemoryDB
      statistics: Average
    unit: ms
  AWS/MemoryDB.DatabaseMemoryUsagePercentage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: DatabaseMemoryUsagePercentage
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "%"
  AWS/MemoryDB.EngineCPUUtilization:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EngineCPUUtilization
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "%"
  AWS/MemoryDB.EvalBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: EvalBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.Evictions:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Evictions
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.FreeableMemory:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeableMemory
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.GeoSpatialBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GeoSpatialBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.GetTypeCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetTypeCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.HashBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HashBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.HyperLogLogBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HyperLogLogBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.IsPrimary:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: IsPrimary
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.JsonBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: JsonBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.KeyAuthorizationFailures:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeyAuthorizationFailures
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.KeyBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeyBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.KeysTracked:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeysTracked
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.KeyspaceHits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeyspaceHits
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.KeyspaceMisses:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: KeyspaceMisses
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.ListBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ListBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.MaxReplicationThroughput:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: MaxReplicationThroughput
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By/s
  AWS/MemoryDB.MemoryFragmentationRatio:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: MemoryFragmentationRatio
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "1"
  AWS/MemoryDB.NetworkBandwidthInAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkBandwidthInAllowanceExceeded
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkBandwidthOutAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkBandwidthOutAllowanceExceeded
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkBytesIn:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkBytesIn
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.NetworkBytesOut:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkBytesOut
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.NetworkConntrackAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkConntrackAllowanceExceeded
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkMaxBytesIn:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkMaxBytesIn
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.NetworkMaxBytesOut:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: NetworkMaxBytesOut
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.NetworkMaxPacketsIn:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkMaxPacketsIn
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkMaxPacketsOut:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkMaxPacketsOut
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkPacketsIn:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsIn
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkPacketsOut:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsOut
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NetworkPacketsPerSecondAllowanceExceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NetworkPacketsPerSecondAllowanceExceeded
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NewConnections:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewConnections
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NumItemsReadFromDisk:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumItemsReadFromDisk
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.NumItemsWrittenToDisk:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumItemsWrittenToDisk
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.PrimaryLinkHealthStatus:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: PrimaryLinkHealthStatus
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "1"
  AWS/MemoryDB.PubSubBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PubSubBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.Reclaimed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Reclaimed
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.ReplicationBytes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ReplicationBytes
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.ReplicationDelayedWriteCommands:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReplicationDelayedWriteCommands
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.ReplicationLag:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReplicationLag
      namespace: AWS/MemoryDB
      statistics: Average
    unit: s
  AWS/MemoryDB.SearchBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SearchBasedGetCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchBasedGetCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SearchBasedSetCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchBasedSetCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SearchNumberOfIndexedKeys:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchNumberOfIndexedKeys
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SearchNumberOfIndexes:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SearchNumberOfIndexes
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SearchTotalIndexSize:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SearchTotalIndexSize
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/MemoryDB.SetBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SetBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SetTypeCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SetTypeCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SortedSetBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SortedSetBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.StreamBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StreamBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.StringBasedCmds:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StringBasedCmds
      namespace: AWS/MemoryDB
      statistics: Average
    unit: "{Count}"
  AWS/MemoryDB.SwapUsage:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SwapUsage
      namespace: AWS/MemoryDB
      statistics: Average
    unit: By
  AWS/NetworkELB.ActiveFlowCount:
    description: Total concurrent flows (connections) from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveFlowCount
      namespace: AWS/NetworkELB
      statistics: Average
    unit: "{Count}"
  AWS/NetworkELB.ActiveFlowCount_TCP:
    description: Total concurrent TCP flows (connections) from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveFlowCount_TCP
      namespace: AWS/NetworkELB
      statistics: Average
    unit: "{Count}"
  AWS/NetworkELB.ActiveFlowCount_TLS:
    description: Total concurrent TLS flows (connections) from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveFlowCount_TLS
      namespace: AWS/NetworkELB
      statistics: Average
    unit: "{Count}"
  AWS/NetworkELB.ActiveFlowCount_UDP:
    description: Total concurrent UDP flows (connections) from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActiveFlowCount_UDP
      namespace: AWS/NetworkELB
      statistics: Average
    unit: "{Count}"
  AWS/NetworkELB.ClientTLSNegotiationErrorCount:
    description: Total TLS handshakes failed during negotiation between client and TLS listener.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientTLSNegotiationErrorCount
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.ConsumedLCUs:
    description: Load balancer capacity units (LCU) used.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedLCUs
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.ConsumedLCUs_TCP:
    description: Load balancer capacity units (LCU) used for TCP.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedLCUs_TCP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.ConsumedLCUs_TLS:
    description: Load balancer capacity units (LCU) used for TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedLCUs_TLS
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.ConsumedLCUs_UDP:
    description: Load balancer capacity units (LCU) used for UDP.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedLCUs_UDP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.HealthyHostCount:
    description: Number of healthy targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HealthyHostCount
      namespace: AWS/NetworkELB
      statistics: Maximum
    unit: "{Count}"
  AWS/NetworkELB.LoadBalancerActiveCount:
    description: Number of active application load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerActiveCount
      namespace: AWS/NetworkELB
      statistics: Maximum
    unit: "{Count}"
  AWS/NetworkELB.LoadBalancerCount:
    description: Number of application load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerCount
      namespace: AWS/NetworkELB
      statistics: Maximum
    unit: "{Count}"
  AWS/NetworkELB.LoadBalancerFailedCount:
    description: Number of failed application load balancers.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LoadBalancerFailedCount
      namespace: AWS/NetworkELB
      statistics: Maximum
    unit: "{Count}"
  AWS/NetworkELB.NewFlowCount:
    description: Total new flows (connections) established from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewFlowCount
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.NewFlowCount_TCP:
    description: Total new TCP flows (connections) established from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewFlowCount_TCP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.NewFlowCount_TLS:
    description: Total new TLS flows (connections) established from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewFlowCount_TLS
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.NewFlowCount_UDP:
    description: Total new UDP flows (connections) established from clients to targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NewFlowCount_UDP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.PeakPacketsPerSecond:
    description: Highest average packet rate per second processed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PeakPacketsPerSecond
      namespace: AWS/NetworkELB
      statistics: Maximum
    unit: "{Count}"
  AWS/NetworkELB.PortAllocationErrorCount:
    description: Total ephemeral port allocation errors during client IP translation.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PortAllocationErrorCount
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.ProcessedBytes:
    description: Total bytes processed by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ProcessedBytes
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: By
  AWS/NetworkELB.ProcessedBytes_TCP:
    description: Total bytes processed by TCP listeners.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ProcessedBytes_TCP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: By
  AWS/NetworkELB.ProcessedBytes_TLS:
    description: Total bytes processed by TLS listeners.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ProcessedBytes_TLS
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: By
  AWS/NetworkELB.ProcessedBytes_UDP:
    description: Total bytes processed by UDP listeners.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ProcessedBytes_UDP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: By
  AWS/NetworkELB.ProcessedPackets:
    description: Total packets processed by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProcessedPackets
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.SecurityGroupBlockedFlowCount_Inbound_ICMP:
    description: Number of inbound ICMP messages rejected by security groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SecurityGroupBlockedFlowCount_Inbound_ICMP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.SecurityGroupBlockedFlowCount_Inbound_TCP:
    description: Number of inbound TCP flows rejected by security groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SecurityGroupBlockedFlowCount_Inbound_TCP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.SecurityGroupBlockedFlowCount_Inbound_UDP:
    description: Number of inbound UDP flows rejected by security groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SecurityGroupBlockedFlowCount_Inbound_UDP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.SecurityGroupBlockedFlowCount_Outbound_ICMP:
    description: Number of outbound ICMP messages rejected by security groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SecurityGroupBlockedFlowCount_Outbound_ICMP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.SecurityGroupBlockedFlowCount_Outbound_TCP:
    description: Number of outbound TCP flows rejected by security groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SecurityGroupBlockedFlowCount_Outbound_TCP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.SecurityGroupBlockedFlowCount_Outbound_UDP:
    description: Number of outbound UDP flows rejected by security groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SecurityGroupBlockedFlowCount_Outbound_UDP
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.TCP_Client_Reset_Count:
    description: Total reset (RST) packets sent from client to target.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TCP_Client_Reset_Count
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.TCP_ELB_Reset_Count:
    description: Total reset (RST) packets generated by the load balancer.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TCP_ELB_Reset_Count
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.TCP_Target_Reset_Count:
    description: Total reset (RST) packets sent from target to client.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TCP_Target_Reset_Count
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.TargetTLSNegotiationErrorCount:
    description: Total TLS handshakes failed during negotiation between TLS listener and target.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TargetTLSNegotiationErrorCount
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/NetworkELB.UnHealthyHostCount:
    description: Number of unhealthy targets.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnHealthyHostCount
      namespace: AWS/NetworkELB
      statistics: Maximum
    unit: "{Count}"
  AWS/NetworkELB.UnhealthyRoutingFlowCount:
    description: Number of flows (connections) routed using routing failover action.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: UnhealthyRoutingFlowCount
      namespace: AWS/NetworkELB
      statistics: Sum
    unit: "{Count}"
  AWS/RDS.ACUUtilization:
    description: The percentage of Aurora capacity units (ACUs) used.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: ACUUtilization
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.AbortedClients:
    description: The number of connections that were aborted because the client disconnected.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AbortedClients
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ActiveTransactions:
    description: The number of active transactions per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ActiveTransactions
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.AllocatedStorageBytes:
    description: The amount of storage to be initially allocated for the database instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Gibibytes
      metric: AllocatedStorageBytes
      namespace: AWS/RDS
      statistics: Average
    unit: GBy
  AWS/RDS.AuroraBinlogReplicaLag:
    description: The lag time in seconds for binlog replication in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: AuroraBinlogReplicaLag
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.AuroraEstimatedSharedMemoryBytes:
    description: The estimated amount of shared memory used in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: AuroraEstimatedSharedMemoryBytes
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.AuroraGlobalDBDataTransferBytes:
    description: The number of bytes transferred between Aurora global database clusters.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: AuroraGlobalDBDataTransferBytes
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.AuroraGlobalDBProgressLag:
    description: The lag time in milliseconds for data replication within an Aurora global database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AuroraGlobalDBProgressLag
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.AuroraGlobalDBRPOLag:
    description: The lag time in milliseconds for recovery point objective (RPO) in an Aurora global database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AuroraGlobalDBRPOLag
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.AuroraGlobalDBReplicatedWriteIO:
    description: The number of replicated write IO operations in an Aurora global database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AuroraGlobalDBReplicatedWriteIO
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.AuroraGlobalDBReplicationLag:
    description: The lag time in milliseconds for data replication between Aurora global database clusters.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AuroraGlobalDBReplicationLag
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.AuroraOptimizedReadsCacheHitRatio:
    description: The cache hit ratio for optimized reads in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: AuroraOptimizedReadsCacheHitRatio
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.AuroraReplicaLag:
    description: The lag time in milliseconds for Aurora replica lag.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AuroraReplicaLag
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.AuroraReplicaLagMaximum:
    description: The maximum lag time in milliseconds for Aurora replica lag.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AuroraReplicaLagMaximum
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.AuroraReplicaLagMinimum:
    description: The minimum lag time in milliseconds for Aurora replica lag.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: AuroraReplicaLagMinimum
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.AuroraSlowConnectionHandleCount:
    description: The number of slow connections handled in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AuroraSlowConnectionHandleCount
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.AuroraSlowHandshakeCount:
    description: The number of slow handshakes in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AuroraSlowHandshakeCount
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.AuroraVolumeBytesLeftTotal:
    description: The total number of bytes remaining in the Aurora volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: AuroraVolumeBytesLeftTotal
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.AvailabilityPercentage:
    description: The availability percentage of the database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: AvailabilityPercentage
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.BacktrackChangeRecordsCreationRate:
    description: The rate at which change records are created for backtracking in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BacktrackChangeRecordsCreationRate
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.BacktrackChangeRecordsStored:
    description: The number of change records stored for backtracking in Aurora.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BacktrackChangeRecordsStored
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.BacktrackWindowActual:
    description: The actual backtrack window in seconds.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Minutes
      metric: BacktrackWindowActual
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.BacktrackWindowAlert:
    description: The number of alerts triggered for backtrack window.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BacktrackWindowAlert
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.BackupRetentionPeriodStorageUsed:
    description: The amount of storage used by backups within the retention period.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BackupRetentionPeriodStorageUsed
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.BinLogDiskUsage:
    description: The disk usage of binary logs, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BinLogDiskUsage
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.BlockedTransactions:
    description: The number of blocked transactions per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: BlockedTransactions
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.BufferCacheHitRatio:
    description: The percentage of requests served by the buffer cache.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: BufferCacheHitRatio
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.BurstBalance:
    description: The burst balance as a percentage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: BurstBalance
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.CPUCreditBalance:
    description: The number of CPU credits available.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditBalance
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.CPUCreditUsage:
    description: The number of CPU credits used.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CPUCreditUsage
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.CPUSurplusCreditBalance:
    description: The surplus CPU credit balance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: CPUSurplusCreditBalance
      namespace: AWS/RDS
      statistics: Average
    unit: "1"
  AWS/RDS.CPUSurplusCreditsCharged:
    description: The number of surplus CPU credits charged.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: CPUSurplusCreditsCharged
      namespace: AWS/RDS
      statistics: Average
    unit: "1"
  AWS/RDS.CPUUtilization:
    description: The percentage of CPU utilization.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilization
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.CheckpointLag:
    description: The lag time in seconds for checkpoints.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: CheckpointLag
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ClientConnections:
    description: The number of client connections.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnections
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ClientConnectionsClosed:
    description: The number of client connections closed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionsClosed
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ClientConnectionsNoTLS:
    description: The number of client connections without TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionsNoTLS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ClientConnectionsReceived:
    description: The number of client connections received.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionsReceived
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ClientConnectionsSetupFailedAuth:
    description: The number of client connection setups that failed due to authentication issues.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionsSetupFailedAuth
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ClientConnectionsSetupSucceeded:
    description: The number of client connection setups that succeeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionsSetupSucceeded
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ClientConnectionsTLS:
    description: The number of client connections with TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ClientConnectionsTLS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.CommitLatency:
    description: The latency in milliseconds for commit operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: CommitLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.CommitThroughput:
    description: The number of commit operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: CommitThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ConnectionAttempts:
    description: The number of attempts to connect to the database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConnectionAttempts
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBClusterParameterGroups:
    description: The number of DB cluster parameter groups in your AWS account. The count excludes default parameter groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBClusterParameterGroups
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBClusters:
    description: The number of Amazon Aurora DB clusters in your AWS account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBClusters
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBInstances:
    description: The number of DB instances in your AWS account.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBInstances
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBLoad:
    description: A measure of the number of active sessions for the database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBLoad
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBLoadCPU:
    description: A measure of the number of active sessions that are using CPU.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBLoadCPU
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBLoadNonCPU:
    description: A measure of the number of active sessions that are not using CPU.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBLoadNonCPU
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBLoadRelativeToNumVCPUs:
    description: The ratio of the DB load to the number of virtual CPUs for the database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBLoadRelativeToNumVCPUs
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBParameterGroups:
    description: The number of DB parameter groups in your AWS account. The count excludes the default DB parameter groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBParameterGroups
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DBSubnetGroups:
    description: The number of DB subnet groups in your AWS account. The count excludes the default subnet group.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DBSubnetGroups
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DDLLatency:
    description: The latency in milliseconds for DDL operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DDLLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.DDLThroughput:
    description: The number of DDL operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: DDLThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.DMLLatency:
    description: The latency in milliseconds for DML operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DMLLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.DMLThroughput:
    description: The number of DML operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: DMLThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.DatabaseConnectionRequests:
    description: The number of database connection requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionRequests
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionRequestsWithTLS:
    description: The number of database connection requests with TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionRequestsWithTLS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnections:
    description: The number of database connections.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnections
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionsBorrowLatency:
    description: The latency in microseconds for borrowing database connections.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: DatabaseConnectionsBorrowLatency
      namespace: AWS/RDS
      statistics: Average
    unit: us
  AWS/RDS.DatabaseConnectionsCurrentlyBorrowed:
    description: The number of database connections currently borrowed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionsCurrentlyBorrowed
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionsCurrentlyInTransaction:
    description: The number of database connections currently in transaction.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionsCurrentlyInTransaction
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionsCurrentlySessionPinned:
    description: The number of database connections currently session pinned.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionsCurrentlySessionPinned
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionsSetupFailed:
    description: The number of database connection setups that failed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionsSetupFailed
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionsSetupSucceeded:
    description: The number of database connection setups that succeeded.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionsSetupSucceeded
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DatabaseConnectionsWithTLS:
    description: The number of database connections with TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DatabaseConnectionsWithTLS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.Deadlocks:
    description: The number of deadlocks per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: Deadlocks
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.DeleteLatency:
    description: The latency in milliseconds for delete operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: DeleteLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.DeleteThroughput:
    description: The number of delete operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: DeleteThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.DiskQueueDepth:
    description: The number of outstanding IO requests waiting to access the disk.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DiskQueueDepth
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.DiskQueueDepthLogVolume:
    description: The number of outstanding IO requests waiting to access the disk log volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DiskQueueDepthLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.EBSByteBalance%:
    description: The byte balance percentage for EBS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSByteBalance%
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.EBSIOBalance%:
    description: The IO balance percentage for EBS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: EBSIOBalance%
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.EngineUptime:
    description: The amount of time, in seconds, that the database engine has been running.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: EngineUptime
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.FailedSQLServerAgentJobsCount:
    description: The number of failed SQL Server Agent jobs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: FailedSQLServerAgentJobsCount
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.FreeEphemeralStorage:
    description: The amount of free ephemeral storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.FreeLocalStorage:
    description: The amount of free local storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.FreeStorageSpace:
    description: The amount of free storage space, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeStorageSpace
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.FreeStorageSpaceLogVolume:
    description: The amount of free storage space for log volume, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeStorageSpaceLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.FreeableMemory:
    description: The amount of memory available for reuse.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: FreeableMemory
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.InsertLatency:
    description: The latency in milliseconds for insert operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: InsertLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.InsertThroughput:
    description: The number of insert operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: InsertThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.LoginFailures:
    description: The number of failed login attempts per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: LoginFailures
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ManualClusterSnapshots:
    description: The number of manually created DB cluster snapshots in your AWS account. The count excludes invalid snapshots.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ManualClusterSnapshots
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.MaxAllocatedStorageBytes:
    description: The upper limit on which RDS can automatically scale the storage of the DB instance.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Gibibytes
      metric: MaxAllocatedStorageBytes
      namespace: AWS/RDS
      statistics: Average
    unit: GBy
  AWS/RDS.MaxDatabaseConnectionsAllowed:
    description: The maximum number of database connections allowed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MaxDatabaseConnectionsAllowed
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.MaximumUsedTransactionIDs:
    description: The maximum number of used transaction IDs.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: MaximumUsedTransactionIDs
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.NetworkReceiveThroughput:
    description: The amount of network throughput received, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: NetworkReceiveThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.NetworkThroughput:
    description: The amount of network throughput, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: NetworkThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.NetworkTransmitThroughput:
    description: The amount of network throughput transmitted, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: NetworkTransmitThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.NumBinaryLogFiles:
    description: The number of binary log files.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumBinaryLogFiles
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.OldestReplicationSlotLag:
    description: The lag in bytes of the oldest replication slot.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: OldestReplicationSlotLag
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.OptionGroups:
    description: The number of option groups in your AWS account. The count excludes the default option groups.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OptionGroups
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.PurgeBoundary:
    description: The boundary at which purging starts.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PurgeBoundary
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.PurgeFinishedPoint:
    description: The point at which purging is finished.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PurgeFinishedPoint
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.Queries:
    description: The number of queries executed per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: Queries
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.QueryDatabaseResponseLatency:
    description: The latency in microseconds for query database responses.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: QueryDatabaseResponseLatency
      namespace: AWS/RDS
      statistics: Average
    unit: us
  AWS/RDS.QueryRequests:
    description: The number of query requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: QueryRequests
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.QueryRequestsNoTLS:
    description: The number of query requests without TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: QueryRequestsNoTLS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.QueryRequestsTLS:
    description: The number of query requests with TLS.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: QueryRequestsTLS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.QueryResponseLatency:
    description: The latency in microseconds for query responses.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: QueryResponseLatency
      namespace: AWS/RDS
      statistics: Average
    unit: us
  AWS/RDS.RDSToAuroraPostgreSQLReplicaLag:
    description: The lag time in seconds for replication from RDS to Aurora PostgreSQL.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: RDSToAuroraPostgreSQLReplicaLag
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ReadIOPS:
    description: The number of read I/O operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ReadIOPSEphemeralStorage:
    description: The number of read I/O operations per second for ephemeral storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPSEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ReadIOPSLocalStorage:
    description: The number of read I/O operations per second for local storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPSLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ReadIOPSLogVolume:
    description: The number of read I/O operations per second for log volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: ReadIOPSLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ReadLatency:
    description: The latency in seconds for read operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReadLatency
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ReadLatencyEphemeralStorage:
    description: The latency in milliseconds for read operations on ephemeral storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ReadLatencyEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.ReadLatencyLocalStorage:
    description: The latency in seconds for read operations on local storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReadLatencyLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ReadLatencyLogVolume:
    description: The latency in seconds for read operations on log volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReadLatencyLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ReadThroughput:
    description: The amount of data read per second, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.ReadThroughputEphemeralStorage:
    description: The amount of data read per second from ephemeral storage, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughputEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.ReadThroughputLocalStorage:
    description: The throughput for read operations on local storage, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughputLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.ReadThroughputLogVolume:
    description: The throughput for read operations on log volume, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: ReadThroughputLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.ReplicaLag:
    description: The lag time in seconds for replica lag.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReplicaLag
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ReplicationChannelLag:
    description: The lag time in seconds for replication channel.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReplicationChannelLag
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.ReplicationSlotDiskUsage:
    description: The disk usage of replication slots, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: ReplicationSlotDiskUsage
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.ReservedDBInstances:
    description: The number of reserved DB instances in your AWS account. The count excludes retired or declined instances.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ReservedDBInstances
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.ResultSetCacheHitRatio:
    description: The hit ratio for the result set cache.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: ResultSetCacheHitRatio
      namespace: AWS/RDS
      statistics: Average
    unit: "%"
  AWS/RDS.RollbackSegmentHistoryListLength:
    description: The length of the rollback segment history list.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RollbackSegmentHistoryListLength
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.RowLockTime:
    description: The amount of time, in milliseconds, that row locks are held.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: RowLockTime
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.SelectLatency:
    description: The latency in milliseconds for select operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: SelectLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.SelectThroughput:
    description: The number of select operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: SelectThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.ServerlessDatabaseCapacity:
    description: The capacity of the serverless database.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServerlessDatabaseCapacity
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.SnapshotStorageUsed:
    description: The amount of storage used by DB snapshots.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SnapshotStorageUsed
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.StorageNetworkReceiveThroughput:
    description: The amount of storage network throughput received, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: StorageNetworkReceiveThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.StorageNetworkThroughput:
    description: The amount of storage network throughput, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: StorageNetworkThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.StorageNetworkTransmitThroughput:
    description: The amount of storage network throughput transmitted, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: StorageNetworkTransmitThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.SumBinaryLogSize:
    description: The total size of binary logs, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SumBinaryLogSize
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.SwapUsage:
    description: The amount of swap space used, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SwapUsage
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.TempStorageIOPS:
    description: The number of I/O operations per second for temporary storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: TempStorageIOPS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.TempStorageThroughput:
    description: The throughput for temporary storage, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: TempStorageThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.TotalBackupStorageBilled:
    description: The total amount of backup storage billed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: TotalBackupStorageBilled
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.TransactionLogsDiskUsage:
    description: The disk usage of transaction logs, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: TransactionLogsDiskUsage
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.TransactionLogsGeneration:
    description: The generation rate of transaction logs, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: TransactionLogsGeneration
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.TruncateFinishedPoint:
    description: The point at which truncation is finished.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: TruncateFinishedPoint
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.UpdateLatency:
    description: The latency in milliseconds for update operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: UpdateLatency
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.UpdateThroughput:
    description: The number of update operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: UpdateThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.VolumeBytesUsed:
    description: The amount of storage used by the database volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: VolumeBytesUsed
      namespace: AWS/RDS
      statistics: Average
    unit: By
  AWS/RDS.VolumeReadIOPs:
    description: The number of read I/O operations per second for the database volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeReadIOPs
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.VolumeWriteIOPs:
    description: The number of write I/O operations per second for the database volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumeWriteIOPs
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}"
  AWS/RDS.WriteIOPS:
    description: The number of write I/O operations per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: WriteIOPS
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.WriteIOPSEphemeralStorage:
    description: The number of write I/O operations per second for ephemeral storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: WriteIOPSEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.WriteIOPSLocalStorage:
    description: The number of write I/O operations per second for local storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: WriteIOPSLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.WriteIOPSLogVolume:
    description: The number of write I/O operations per second for log volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count/Second
      metric: WriteIOPSLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: "{Count}/s"
  AWS/RDS.WriteLatency:
    description: The latency in seconds for write operations.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: WriteLatency
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.WriteLatencyEphemeralStorage:
    description: The latency in milliseconds for write operations on ephemeral storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: WriteLatencyEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: ms
  AWS/RDS.WriteLatencyLocalStorage:
    description: The latency in seconds for write operations on local storage.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: WriteLatencyLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.WriteLatencyLogVolume:
    description: The latency in seconds for write operations on log volume.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: WriteLatencyLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: s
  AWS/RDS.WriteThroughput:
    description: The amount of data written per second, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughput
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.WriteThroughputEphemeralStorage:
    description: The amount of data written per second to ephemeral storage, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughputEphemeralStorage
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.WriteThroughputLocalStorage:
    description: The throughput for write operations on local storage, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughputLocalStorage
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/RDS.WriteThroughputLogVolume:
    description: The throughput for write operations on log volume, in bytes per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes/Second
      metric: WriteThroughputLogVolume
      namespace: AWS/RDS
      statistics: Average
    unit: By/s
  AWS/S3.4xxErrors:
    description: The number of client errors (4xx status codes) encountered during requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 4xxErrors
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.5xxErrors:
    description: The number of server errors (5xx status codes) encountered during requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: 5xxErrors
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.AllRequests:
    description: The total number of all types of requests made to the bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AllRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.BucketCount:
    description: The total number of buckets in the account for a given region.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BucketCount
      namespace: AWS/S3
      statistics: Maximum
    unit: "{Count}"
  AWS/S3.BucketSizeBytes:
    description: The amount of data stored in the bucket, in bytes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BucketSizeBytes
      namespace: AWS/S3
      statistics: Average
    unit: By
  AWS/S3.BytesDownloaded:
    description: The total number of bytes downloaded from the bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesDownloaded
      namespace: AWS/S3
      statistics: Average
    unit: By
  AWS/S3.BytesPendingReplication:
    description: The total number of bytes pending replication to a destination bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesPendingReplication
      namespace: AWS/S3
      statistics: Maximum
    unit: By
  AWS/S3.BytesUploaded:
    description: The total number of bytes uploaded to the bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: BytesUploaded
      namespace: AWS/S3
      statistics: Average
    unit: By
  AWS/S3.DeleteRequests:
    description: The number of DELETE requests made to the bucket to remove objects.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DeleteRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.FirstByteLatency:
    description: The time taken, in milliseconds, from the request to the first byte of the response.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: FirstByteLatency
      namespace: AWS/S3
      statistics: Average
    unit: ms
  AWS/S3.GetRequests:
    description: The number of GET requests made to the bucket to retrieve objects.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: GetRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.HeadRequests:
    description: The number of HEAD requests made to the bucket to retrieve metadata of objects.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: HeadRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.InvokedLambda:
    description: The number of times a Lambda function was invoked in response to S3 events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: InvokedLambda
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.LambdaResponse4xx:
    description: The number of 4xx errors returned by Lambda functions invoked by S3 events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaResponse4xx
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.LambdaResponse5xx:
    description: The number of 5xx errors returned by Lambda functions invoked by S3 events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaResponse5xx
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.LambdaResponseRequests:
    description: The number of response requests returned by Lambda functions invoked by S3 events.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaResponseRequests
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.ListRequests:
    description: The number of LIST requests made to the bucket to retrieve lists of objects.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ListRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.NumberOfObjects:
    description: The total number of objects stored in the bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfObjects
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.OperationsFailedReplication:
    description: The number of operations that failed during replication to a destination bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OperationsFailedReplication
      namespace: AWS/S3
      statistics: Average
    unit: "{Count}"
  AWS/S3.OperationsPendingReplication:
    description: The number of operations pending replication to a destination bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OperationsPendingReplication
      namespace: AWS/S3
      statistics: Maximum
    unit: "{Count}"
  AWS/S3.PostRequests:
    description: The number of POST requests made to the bucket, often used for multipart uploads.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PostRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.ProxiedRequests:
    description: The number of requests proxied by the S3 bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProxiedRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.PutRequests:
    description: The number of PUT requests made to the bucket to add or update objects.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PutRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.ReplicationLatency:
    description: The time taken, in seconds, for data to be replicated to a destination bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ReplicationLatency
      namespace: AWS/S3
      statistics: Maximum
    unit: s
  AWS/S3.SelectBytesReturned:
    description: The total number of bytes returned by Amazon S3 SELECT requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SelectBytesReturned
      namespace: AWS/S3
      statistics: Average
    unit: By
  AWS/S3.SelectBytesScanned:
    description: The total number of bytes scanned by Amazon S3 SELECT requests.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SelectBytesScanned
      namespace: AWS/S3
      statistics: Average
    unit: By
  AWS/S3.SelectRequests:
    description: The number of SELECT requests made to the bucket to retrieve subsets of object data using SQL queries.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SelectRequests
      namespace: AWS/S3
      statistics: Sum
    unit: "{Count}"
  AWS/S3.TotalRequestLatency:
    description: The total time taken, in milliseconds, for a request to be processed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: TotalRequestLatency
      namespace: AWS/S3
      statistics: Average
    unit: ms
  AWS/SES.Bounce:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Bounce
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Click:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Click
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Clicks:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Clicks
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Complaint:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Complaint
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Delivery:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Delivery
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.DeliveryDelay:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DeliveryDelay
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Open:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Open
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Opens:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Opens
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Reject:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Reject
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Rendering Failures:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: Rendering Failures
      namespace: AWS/SES
      statistics: Average
    unit: "{Count}"
  AWS/SES.RenderingFailure:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: RenderingFailure
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Reputation.BounceRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: Reputation.BounceRate
      namespace: AWS/SES
      statistics: Average
    unit: "%"
  AWS/SES.Reputation.ComplaintRate:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: Reputation.ComplaintRate
      namespace: AWS/SES
      statistics: Average
    unit: "%"
  AWS/SES.Send:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Send
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SES.Subscription:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Subscription
      namespace: AWS/SES
      statistics: Average
    unit: "1"
  AWS/SNS.ApproximateNumberOfFilterPolicies:
    description: Approximate number of filter policies.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ApproximateNumberOfFilterPolicies
      namespace: AWS/SNS
      statistics: Average
    unit: "1"
  AWS/SNS.ApproximateNumberOfPendingSubscriptions:
    description: Approximate number of pending subscriptions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ApproximateNumberOfPendingSubscriptions
      namespace: AWS/SNS
      statistics: Average
    unit: "1"
  AWS/SNS.ApproximateNumberOfTopics:
    description: Approximate number of topics.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ApproximateNumberOfTopics
      namespace: AWS/SNS
      statistics: Average
    unit: "1"
  AWS/SNS.CallCount:
    description: Total API call count.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: CallCount
      namespace: AWS/SNS
      statistics: Sum
    unit: "1"
  AWS/SNS.NumberOfMessagesPublished:
    description: The number of messages published to your Amazon SNS topics.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfMessagesPublished
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfMessagesPublishedPerAccount:
    description: The count of resources.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: NumberOfMessagesPublishedPerAccount
      namespace: AWS/SNS
      statistics: Sum
    unit: "1"
  AWS/SNS.NumberOfNotificationsDelivered:
    description: The number of messages successfully delivered to subscribing endpoints.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsDelivered
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFailed:
    description: The number of messages that failed to deliver.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFailed
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFailedToRedriveToDlq:
    description: Messages that couldn't be moved to a dead-letter queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFailedToRedriveToDlq
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFilteredOut:
    description: Messages rejected by subscription filter policies.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFilteredOut
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFilteredOut-InvalidAttributes:
    description: Messages rejected due to invalid attributes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFilteredOut-InvalidAttributes
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFilteredOut-InvalidMessageBody:
    description: Messages rejected due to invalid message body.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFilteredOut-InvalidMessageBody
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFilteredOut-MessageAttributes:
    description: Messages rejected by attribute-based filtering.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFilteredOut-MessageAttributes
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFilteredOut-MessageBody:
    description: Messages rejected by payload-based filtering.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFilteredOut-MessageBody
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsFilteredOut-NoMessageAttributes:
    description: Messages rejected for lacking attributes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsFilteredOut-NoMessageAttributes
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.NumberOfNotificationsRedrivenToDlq:
    description: Messages moved to a dead-letter queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfNotificationsRedrivenToDlq
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SNS.PublishSize:
    description: The size of published messages.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: PublishSize
      namespace: AWS/SNS
      statistics: Average
    unit: By
  AWS/SNS.ResourceCount:
    description: The count of resources.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ResourceCount
      namespace: AWS/SNS
      statistics: Sum
    unit: "1"
  AWS/SNS.SMSMonthToDateSpentUSD:
    description: Charges accrued for sending SMS messages since the start of the month.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: SMSMonthToDateSpentUSD
      namespace: AWS/SNS
      statistics: Sum
    unit: "1"
  AWS/SNS.SMSSuccessRate:
    description: The rate of successful SMS deliveries.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SMSSuccessRate
      namespace: AWS/SNS
      statistics: Sum
    unit: "{Count}"
  AWS/SQS.ApproximateAgeOfOldestMessage:
    description: Approximate age of the oldest non-deleted message in the queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: ApproximateAgeOfOldestMessage
      namespace: AWS/SQS
      statistics: Average
    unit: s
  AWS/SQS.ApproximateNumberOfGroupsWithInflightMessages:
    description: Approximate number of message groups with in flight messages.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ApproximateNumberOfGroupsWithInflightMessages
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.ApproximateNumberOfMessagesDelayed:
    description: Number of messages in the queue that are delayed and not available for reading immediately.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ApproximateNumberOfMessagesDelayed
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.ApproximateNumberOfMessagesNotVisible:
    description: Number of messages that are in flight.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ApproximateNumberOfMessagesNotVisible
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.ApproximateNumberOfMessagesVisible:
    description: Number of messages to be processed.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ApproximateNumberOfMessagesVisible
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.NumberOfDeduplicatedSentMessages:
    description: Number of messages sent to a queue that were deduplicated.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfDeduplicatedSentMessages
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.NumberOfEmptyReceives:
    description: Number of ReceiveMessage API calls that did not return a message.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfEmptyReceives
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.NumberOfMessagesDeleted:
    description: Number of messages deleted from the queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfMessagesDeleted
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.NumberOfMessagesReceived:
    description: Number of messages returned by calls to the ReceiveMessage action.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfMessagesReceived
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.NumberOfMessagesSent:
    description: Number of messages added to a queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: NumberOfMessagesSent
      namespace: AWS/SQS
      statistics: Average
    unit: "{Count}"
  AWS/SQS.SentMessageSize:
    description: Size of messages added to a queue.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bytes
      metric: SentMessageSize
      namespace: AWS/SQS
      statistics: Average
    unit: By
  AWS/SageMaker.ActiveWorkers:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ActiveWorkers
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.CPUUtilizationNormalized:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: CPUUtilizationNormalized
      namespace: AWS/SageMaker
      statistics: Average
    unit: "%"
  AWS/SageMaker.ClientInvocationErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ClientInvocationErrors
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ClientInvocations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ClientInvocations
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ClientLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ClientLatency
      namespace: AWS/SageMaker
      statistics: Average
    unit: ms
  AWS/SageMaker.ConsumedReadCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ConsumedReadCapacityUnits
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ConsumedReadRequestsUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ConsumedReadRequestsUnits
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ConsumedWriteCapacityUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ConsumedWriteCapacityUnits
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ConsumedWriteRequestsUnits:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ConsumedWriteRequestsUnits
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.DatasetObjectsAutoAnnotated:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DatasetObjectsAutoAnnotated
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.DatasetObjectsHumanAnnotated:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DatasetObjectsHumanAnnotated
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.DatasetObjectsLabelingFailed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: DatasetObjectsLabelingFailed
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ExecutionDuration:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ExecutionDuration
      namespace: AWS/SageMaker
      statistics: Average
    unit: ms
  AWS/SageMaker.ExecutionFailed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionFailed
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.ExecutionStarted:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionStarted
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.ExecutionStopped:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionStopped
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.ExecutionSucceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionSucceeded
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.GPUMemoryUtilizationNormalized:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: GPUMemoryUtilizationNormalized
      namespace: AWS/SageMaker
      statistics: Average
    unit: "%"
  AWS/SageMaker.GPUUtilizationNormalized:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: GPUUtilizationNormalized
      namespace: AWS/SageMaker
      statistics: Average
    unit: "%"
  AWS/SageMaker.Invocation4XXErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Invocation4XXErrors
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.Invocation5XXErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Invocation5XXErrors
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.InvocationModelErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: InvocationModelErrors
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.Invocations:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Invocations
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.InvocationsPerCopy:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: InvocationsPerCopy
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.InvocationsPerInstance:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: InvocationsPerInstance
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.JobsFailed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: JobsFailed
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.JobsStopped:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: JobsStopped
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.JobsSucceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: JobsSucceeded
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.Latency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: Latency
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.MemoryUtilizationNormalized:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Percent
      metric: MemoryUtilizationNormalized
      namespace: AWS/SageMaker
      statistics: Average
    unit: "%"
  AWS/SageMaker.ModelCacheHit:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ModelCacheHit
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ModelDownloadingTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ModelDownloadingTime
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.ModelLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ModelLatency
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.ModelLoadingTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ModelLoadingTime
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.ModelLoadingWaitTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ModelLoadingWaitTime
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.ModelSetupTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ModelSetupTime
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.ModelUnloadingTime:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: ModelUnloadingTime
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.NumberOfUsers:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: NumberOfUsers
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.Operation4XXErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Operation4XXErrors
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.Operation5XXErrors:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: Operation5XXErrors
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.OverheadLatency:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Microseconds
      metric: OverheadLatency
      namespace: AWS/SageMaker
      statistics: Average
    unit: us
  AWS/SageMaker.StepDuration:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: StepDuration
      namespace: AWS/SageMaker
      statistics: Average
    unit: ms
  AWS/SageMaker.StepFailed:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StepFailed
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.StepStarted:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StepStarted
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.StepStopped:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StepStopped
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.StepSucceeded:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: StepSucceeded
      namespace: AWS/SageMaker
      statistics: Average
    unit: "{Count}"
  AWS/SageMaker.TasksAccepted:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: TasksAccepted
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.TasksDeclined:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: TasksDeclined
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.TasksReturned:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: TasksReturned
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.TasksSubmitted:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: TasksSubmitted
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.ThrottledRequests:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: ThrottledRequests
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/SageMaker.TimeSpent:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Seconds
      metric: TimeSpent
      namespace: AWS/SageMaker
      statistics: Average
    unit: s
  AWS/SageMaker.TotalDatasetObjectsLabeled:
    description: ""
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: None
      metric: TotalDatasetObjectsLabeled
      namespace: AWS/SageMaker
      statistics: Average
    unit: "1"
  AWS/States.ActivitiesFailed:
    description: Number of failed activities.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivitiesFailed
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ActivitiesHeartbeatTimedOut:
    description: Number of activities with heartbeat timeout.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivitiesHeartbeatTimedOut
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ActivitiesScheduled:
    description: Number of scheduled activities.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivitiesScheduled
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ActivitiesStarted:
    description: Number of started activities.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivitiesStarted
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ActivitiesSucceeded:
    description: Number of succeeded activities.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivitiesSucceeded
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ActivitiesTimedOut:
    description: Number of timed out activities.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ActivitiesTimedOut
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ActivityRunTime:
    description: Interval between the time the activity starts and the time it closes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ActivityRunTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ActivityScheduleTime:
    description: Interval for which the activity stays in the schedule state.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ActivityScheduleTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ActivityTime:
    description: Interval between the time the activity is scheduled and the time it closes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ActivityTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.AliasCount:
    description: Number of aliases created for the state machine.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AliasCount
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ConsumedCapacity:
    description: Count of requests per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ConsumedCapacity
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionThrottled:
    description: Indicates if execution was throttled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionThrottled
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionTime:
    description: Time taken for execution.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ExecutionTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ExecutionsAborted:
    description: Number of aborted executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionsAborted
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionsFailed:
    description: Number of failed executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionsFailed
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionsRedriven:
    description: Number of redriven executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionsRedriven
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionsStarted:
    description: Number of started executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionsStarted
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionsSucceeded:
    description: Number of succeeded executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionsSucceeded
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExecutionsTimedOut:
    description: Number of executions that timed out.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExecutionsTimedOut
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExpressExecutionBilledDuration:
    description: The duration for which an Express Workflow is charged.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ExpressExecutionBilledDuration
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ExpressExecutionBilledMemory:
    description: The amount of consumed memory for which an Express Workflow is charged.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExpressExecutionBilledMemory
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ExpressExecutionMemory:
    description: The total memory consumed by an Express Workflow.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ExpressExecutionMemory
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.LambdaFunctionRunTime:
    description: Interval between the time the Lambda function starts and the time it closes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: LambdaFunctionRunTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.LambdaFunctionScheduleTime:
    description: Interval for which the Lambda function stays in the schedule state.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: LambdaFunctionScheduleTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.LambdaFunctionTime:
    description: Interval between the time the Lambda function is scheduled and the time it closes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: LambdaFunctionTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.LambdaFunctionsFailed:
    description: Number of failed Lambda functions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaFunctionsFailed
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.LambdaFunctionsScheduled:
    description: Number of scheduled Lambda functions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaFunctionsScheduled
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.LambdaFunctionsStarted:
    description: Number of started Lambda functions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaFunctionsStarted
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.LambdaFunctionsSucceeded:
    description: Number of succeeded Lambda functions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaFunctionsSucceeded
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.LambdaFunctionsTimedOut:
    description: Number of timed out Lambda functions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: LambdaFunctionsTimedOut
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.OpenExecutionCount:
    description: Approximate number of currently open executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpenExecutionCount
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.OpenExecutionLimit:
    description: Maximum number of open executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: OpenExecutionLimit
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ProvisionedBucketSize:
    description: Count of available requests per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedBucketSize
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ProvisionedRefillRate:
    description: Count of requests per second that are allowed into the bucket.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ProvisionedRefillRate
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.RedrivenExecutionsAborted:
    description: Number of aborted redriven executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RedrivenExecutionsAborted
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.RedrivenExecutionsFailed:
    description: Number of failed redriven executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RedrivenExecutionsFailed
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.RedrivenExecutionsSucceeded:
    description: Number of succeeded redriven executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RedrivenExecutionsSucceeded
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.RedrivenExecutionsTimedOut:
    description: Number of timed out redriven executions.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RedrivenExecutionsTimedOut
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ServiceIntegrationRunTime:
    description: Interval between the time the Service Task starts and the time it closes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ServiceIntegrationRunTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ServiceIntegrationScheduleTime:
    description: Interval for which the Service Task stays in the schedule state.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ServiceIntegrationScheduleTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ServiceIntegrationTime:
    description: Interval between the time the Service Task is scheduled and the time it closes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Milliseconds
      metric: ServiceIntegrationTime
      namespace: AWS/States
      statistics: Average
    unit: ms
  AWS/States.ServiceIntegrationsFailed:
    description: Number of failed Service Tasks.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceIntegrationsFailed
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ServiceIntegrationsScheduled:
    description: Number of scheduled Service Tasks.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceIntegrationsScheduled
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ServiceIntegrationsStarted:
    description: Number of started Service Tasks.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceIntegrationsStarted
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ServiceIntegrationsSucceeded:
    description: Number of successfully completed Service Tasks.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceIntegrationsSucceeded
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ServiceIntegrationsTimedOut:
    description: Number of Service Tasks that time out on close.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ServiceIntegrationsTimedOut
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.ThrottledEvents:
    description: Count of requests that have been throttled.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ThrottledEvents
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/States.VersionCount:
    description: umber of versions published for the state machine.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VersionCount
      namespace: AWS/States
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.AllowRuleMatch:
    description: The number of requests that matched an allow rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AllowRuleMatch
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.AllowedRequests:
    description: The number of requests that were allowed by the WAF.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AllowedRequests
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.BlockRuleMatch:
    description: The number of requests that matched a block rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BlockRuleMatch
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.BlockedRequests:
    description: The number of requests that were blocked by the WAF.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BlockedRequests
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CaptchaRequests:
    description: The number of requests that triggered a CAPTCHA challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchaRequests
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CaptchaRuleMatch:
    description: The number of requests that matched a CAPTCHA rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchaRuleMatch
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CaptchaRuleMatchWithValidToken:
    description: The number of requests that matched a CAPTCHA rule and had a valid token.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchaRuleMatchWithValidToken
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CaptchasAttempted:
    description: The number of CAPTCHA challenges attempted.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchasAttempted
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CaptchasSolved:
    description: The number of CAPTCHAs successfully solved.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchasSolved
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.ChallengeRequests:
    description: The number of requests that triggered a challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChallengeRequests
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.ChallengeRuleMatch:
    description: The number of requests that matched a challenge rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChallengeRuleMatch
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.ChallengeRuleMatchWithValidToken:
    description: The number of requests that matched a challenge rule and had a valid token.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChallengeRuleMatchWithValidToken
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CountRuleMatch:
    description: The number of requests that matched a count rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CountRuleMatch
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.CountedRequests:
    description: The total number of requests processed by the WAF, including allowed and blocked.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CountedRequests
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.DDoSAttackBitsPerSecond:
    description: The rate of DDoS attack traffic in bits per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bits
      metric: DDoSAttackBitsPerSecond
      namespace: AWS/WAF
      statistics: Average
    unit: bit
  AWS/WAF.DDoSAttackPacketsPerSecond:
    description: The rate of DDoS attack traffic in packets per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DDoSAttackPacketsPerSecond
      namespace: AWS/WAF
      statistics: Average
    unit: "{Count}"
  AWS/WAF.DDoSAttackRequestsPerSecond:
    description: The rate of DDoS attack requests per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DDoSAttackRequestsPerSecond
      namespace: AWS/WAF
      statistics: Average
    unit: "{Count}"
  AWS/WAF.DDoSDetected:
    description: The number of DDoS attacks detected.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DDoSDetected
      namespace: AWS/WAF
      statistics: Average
    unit: "{Count}"
  AWS/WAF.PassedRequests:
    description: The number of requests that were passed without further action.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PassedRequests
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.RequestsWithValidCaptchaToken:
    description: The number of requests that passed the CAPTCHA challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestsWithValidCaptchaToken
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.RequestsWithValidChallengeToken:
    description: The number of requests that passed the challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestsWithValidChallengeToken
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.SampleAllowedRequest:
    description: A sample of allowed requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleAllowedRequest
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.SampleBlockedRequest:
    description: A sample of blocked requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleBlockedRequest
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.SampleCaptchaRequest:
    description: A sample of CAPTCHA requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleCaptchaRequest
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.SampleChallengeRequest:
    description: A sample of challenge requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleChallengeRequest
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.SampleCountRequest:
    description: A sample of count requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleCountRequest
      namespace: AWS/WAF
      statistics: Sum
    unit: "{Count}"
  AWS/WAF.VolumeBitsPerSecond:
    description: The rate of incoming traffic in bits per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bits
      metric: VolumeBitsPerSecond
      namespace: AWS/WAF
      statistics: Average
    unit: bit
  AWS/WAF.VolumePacketsPerSecond:
    description: The rate of incoming traffic in packets per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumePacketsPerSecond
      namespace: AWS/WAF
      statistics: Average
    unit: "{Count}"
  AWS/WAFV2.AllowRuleMatch:
    description: The number of requests that matched an allow rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AllowRuleMatch
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.AllowedRequests:
    description: The number of requests that were allowed by the WAF.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: AllowedRequests
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.BlockRuleMatch:
    description: The number of requests that matched a block rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BlockRuleMatch
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.BlockedRequests:
    description: The number of requests that were blocked by the WAF.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: BlockedRequests
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CaptchaRequests:
    description: The number of requests that triggered a CAPTCHA challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchaRequests
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CaptchaRuleMatch:
    description: The number of requests that matched a CAPTCHA rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchaRuleMatch
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CaptchaRuleMatchWithValidToken:
    description: The number of requests that matched a CAPTCHA rule and had a valid token.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchaRuleMatchWithValidToken
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CaptchasAttempted:
    description: The number of CAPTCHA challenges attempted.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchasAttempted
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CaptchasSolved:
    description: The number of CAPTCHAs successfully solved.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CaptchasSolved
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.ChallengeRequests:
    description: The number of requests that triggered a challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChallengeRequests
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.ChallengeRuleMatch:
    description: The number of requests that matched a challenge rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChallengeRuleMatch
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.ChallengeRuleMatchWithValidToken:
    description: The number of requests that matched a challenge rule and had a valid token.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: ChallengeRuleMatchWithValidToken
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CountRuleMatch:
    description: The number of requests that matched a count rule.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CountRuleMatch
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.CountedRequests:
    description: The total number of requests processed by the WAF, including allowed and blocked.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: CountedRequests
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.DDoSAttackBitsPerSecond:
    description: The rate of DDoS attack traffic in bits per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bits
      metric: DDoSAttackBitsPerSecond
      namespace: AWS/WAFV2
      statistics: Average
    unit: bit
  AWS/WAFV2.DDoSAttackPacketsPerSecond:
    description: The rate of DDoS attack traffic in packets per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DDoSAttackPacketsPerSecond
      namespace: AWS/WAFV2
      statistics: Average
    unit: "{Count}"
  AWS/WAFV2.DDoSAttackRequestsPerSecond:
    description: The rate of DDoS attack requests per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DDoSAttackRequestsPerSecond
      namespace: AWS/WAFV2
      statistics: Average
    unit: "{Count}"
  AWS/WAFV2.DDoSDetected:
    description: The number of DDoS attacks detected.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: DDoSDetected
      namespace: AWS/WAFV2
      statistics: Average
    unit: "{Count}"
  AWS/WAFV2.PassedRequests:
    description: The number of requests that were passed without further action.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: PassedRequests
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.RequestsWithValidCaptchaToken:
    description: The number of requests that passed the CAPTCHA challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestsWithValidCaptchaToken
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.RequestsWithValidChallengeToken:
    description: The number of requests that passed the challenge.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: RequestsWithValidChallengeToken
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.SampleAllowedRequest:
    description: A sample of allowed requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleAllowedRequest
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.SampleBlockedRequest:
    description: A sample of blocked requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleBlockedRequest
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.SampleCaptchaRequest:
    description: A sample of CAPTCHA requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleCaptchaRequest
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.SampleChallengeRequest:
    description: A sample of challenge requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleChallengeRequest
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.SampleCountRequest:
    description: A sample of count requests for troubleshooting purposes.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: SampleCountRequest
      namespace: AWS/WAFV2
      statistics: Sum
    unit: "{Count}"
  AWS/WAFV2.VolumeBitsPerSecond:
    description: The rate of incoming traffic in bits per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Bits
      metric: VolumeBitsPerSecond
      namespace: AWS/WAFV2
      statistics: Average
    unit: bit
  AWS/WAFV2.VolumePacketsPerSecond:
    description: The rate of incoming traffic in packets per second.
    enabled: true
    gauge:
      aggregation_temporality: cumulative
      value_type: double
    metadata:
      aws_unit: Count
      metric: VolumePacketsPerSecond
      namespace: AWS/WAFV2
      statistics: Average
    unit: "{Count}"
